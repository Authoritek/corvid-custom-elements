parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"DqYQ":[function(require,module,exports) {
var define;
var t;!function(){function i(t){return t&&t.__esModule?{d:t.default}:{d:t}}var e,s={};s={addFontGaegu:t=>{t.append("defs").append("style").attr("type","text/css").text("@font-face {\n    font-family: 'gaeguregular';\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\n    font-weight: normal;\n    font-style: normal;\n}")},addFontIndieFlower:t=>{t.append("defs").append("style").attr("type","text/css").text("@font-face {\n    font-family: 'indie_flowerregular';\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\n    font-weight: normal;\n    font-style: normal;\n\t}")}};var n=function(t,i){return t<i?-1:t>i?1:t>=i?0:NaN};var r=function(t){return 1===t.length&&(t=function(t){return function(i,e){return n(t(i),e)}}(t)),{left:function(i,e,s,n){for(null==s&&(s=0),null==n&&(n=i.length);s<n;){var r=s+n>>>1;t(i[r],e)<0?s=r+1:n=r}return s},right:function(i,e,s,n){for(null==s&&(s=0),null==n&&(n=i.length);s<n;){var r=s+n>>>1;t(i[r],e)>0?n=r:s=r+1}return s}}}(n),a=r.right,h=(r.left,function(t,i){let e,s;if(void 0===i)for(const n of t)null!=n&&(void 0===e?n>=n&&(e=s=n):(e>n&&(e=n),s<n&&(s=n)));else{let n=-1;for(let r of t)null!=(r=i(r,++n,t))&&(void 0===e?r>=r&&(e=s=r):(e>r&&(e=r),s<r&&(s=r)))}return[e,s]}),o=function(t,i,e){t=+t,i=+i,e=(n=arguments.length)<2?(i=t,t=0,1):n<3?1:+e;for(var s=-1,n=0|Math.max(0,Math.ceil((i-t)/e)),r=new Array(n);++s<n;)r[s]=t+s*e;return r},l=Math.sqrt(50),c=Math.sqrt(10),u=Math.sqrt(2),f=function(t,i,e){var s,n,r,a,h=-1;if(e=+e,(t=+t)==(i=+i)&&e>0)return[t];if((s=i<t)&&(n=t,t=i,i=n),0===(a=d(t,i,e))||!isFinite(a))return[];if(a>0)for(t=Math.ceil(t/a),i=Math.floor(i/a),r=new Array(n=Math.ceil(i-t+1));++h<n;)r[h]=(t+h)*a;else for(t=Math.floor(t*a),i=Math.ceil(i*a),r=new Array(n=Math.ceil(t-i+1));++h<n;)r[h]=(t-h)/a;return s&&r.reverse(),r};function d(t,i,e){var s=(i-t)/Math.max(0,e),n=Math.floor(Math.log(s)/Math.LN10),r=s/Math.pow(10,n);return n>=0?(r>=l?10:r>=c?5:r>=u?2:1)*Math.pow(10,n):-Math.pow(10,-n)/(r>=l?10:r>=c?5:r>=u?2:1)}function g(t,i){let e;if(void 0===i)for(const s of t)null!=s&&(e<s||void 0===e&&s>=s)&&(e=s);else{let s=-1;for(let n of t)null!=(n=i(n,++s,t))&&(e<n||void 0===e&&n>=n)&&(e=n)}return e}function p(t,i){let e;if(void 0===i)for(const s of t)null!=s&&(e>s||void 0===e&&s>=s)&&(e=s);else{let s=-1;for(let n of t)null!=(n=i(n,++s,t))&&(e>n||void 0===e&&n>=n)&&(e=n)}return e}var m=Array.prototype.slice,y=function(t){return t},A=1,x=2,v=3,b=4,w=1e-6;function S(t){return"translate("+(t+.5)+",0)"}function M(t){return"translate(0,"+(t+.5)+")"}function k(){return!this.__axis}function P(t,i){var e=[],s=null,n=null,r=6,a=6,h=3,o=t===A||t===b?-1:1,l=t===b||t===x?"x":"y",c=t===A||t===v?S:M;function u(u){var f=null==s?i.ticks?i.ticks.apply(i,e):i.domain():s,d=null==n?i.tickFormat?i.tickFormat.apply(i,e):y:n,g=Math.max(r,0)+h,p=i.range(),m=+p[0]+.5,S=+p[p.length-1]+.5,M=(i.bandwidth?function(t){var i=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(i=Math.round(i)),function(e){return+t(e)+i}}:function(t){return function(i){return+t(i)}})(i.copy()),P=u.selection?u.selection():u,F=P.selectAll(".domain").data([null]),z=P.selectAll(".tick").data(f,i).order(),R=z.exit(),C=z.enter().append("g").attr("class","tick"),T=z.select("line"),j=z.select("text");F=F.merge(F.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),z=z.merge(C),T=T.merge(C.append("line").attr("stroke","currentColor").attr(l+"2",o*r)),j=j.merge(C.append("text").attr("fill","currentColor").attr(l,o*g).attr("dy",t===A?"0em":t===v?"0.71em":"0.32em")),u!==P&&(F=F.transition(u),z=z.transition(u),T=T.transition(u),j=j.transition(u),R=R.transition(u).attr("opacity",w).attr("transform",function(t){return isFinite(t=M(t))?c(t):this.getAttribute("transform")}),C.attr("opacity",w).attr("transform",function(t){var i=this.parentNode.__axis;return c(i&&isFinite(i=i(t))?i:M(t))})),R.remove(),F.attr("d",t===b||t==x?a?"M"+o*a+","+m+"H0.5V"+S+"H"+o*a:"M0.5,"+m+"V"+S:a?"M"+m+","+o*a+"V0.5H"+S+"V"+o*a:"M"+m+",0.5H"+S),z.attr("opacity",1).attr("transform",function(t){return c(M(t))}),T.attr(l+"2",o*r),j.attr(l,o*g).text(d),P.filter(k).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===x?"start":t===b?"end":"middle"),P.each(function(){this.__axis=M})}return u.scale=function(t){return arguments.length?(i=t,u):i},u.ticks=function(){return e=m.call(arguments),u},u.tickArguments=function(t){return arguments.length?(e=null==t?[]:m.call(t),u):e.slice()},u.tickValues=function(t){return arguments.length?(s=null==t?null:m.call(t),u):s&&s.slice()},u.tickFormat=function(t){return arguments.length?(n=t,u):n},u.tickSize=function(t){return arguments.length?(r=a=+t,u):r},u.tickSizeInner=function(t){return arguments.length?(r=+t,u):r},u.tickSizeOuter=function(t){return arguments.length?(a=+t,u):a},u.tickPadding=function(t){return arguments.length?(h=+t,u):h},u}function F(t){return P(v,t)}function z(t){return P(b,t)}function R(t){return function(i,e,s){return 2===arguments.length&&"function"==typeof e&&(s=e,e=void 0),V(i,e).then(function(i){return t(i,s)})}}var C={},T={},j=34,E=10,L=13;function O(t){return new Function("d","return {"+t.map(function(t,i){return JSON.stringify(t)+": d["+i+"]"}).join(",")+"}")}function I(t){var i=Object.create(null),e=[];return t.forEach(function(t){for(var s in t)s in i||e.push(i[s]=s)}),e}function G(t,i){var e=t+"",s=e.length;return s<i?new Array(i-s+1).join(0)+e:e}function D(t){var i=t.getUTCHours(),e=t.getUTCMinutes(),s=t.getUTCSeconds(),n=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":function(t){return t<0?"-"+G(-t,6):t>9999?"+"+G(t,6):G(t,4)}(t.getUTCFullYear())+"-"+G(t.getUTCMonth()+1,2)+"-"+G(t.getUTCDate(),2)+(n?"T"+G(i,2)+":"+G(e,2)+":"+G(s,2)+"."+G(n,3)+"Z":s?"T"+G(i,2)+":"+G(e,2)+":"+G(s,2)+"Z":e||i?"T"+G(i,2)+":"+G(e,2)+"Z":"")}var Y=function(t){var i=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function s(t,i){var s,n=[],r=t.length,a=0,h=0,o=r<=0,l=!1;function c(){if(o)return T;if(l)return l=!1,C;var i,s,n=a;if(t.charCodeAt(n)===j){for(;a++<r&&t.charCodeAt(a)!==j||t.charCodeAt(++a)===j;);return(i=a)>=r?o=!0:(s=t.charCodeAt(a++))===E?l=!0:s===L&&(l=!0,t.charCodeAt(a)===E&&++a),t.slice(n+1,i-1).replace(/""/g,'"')}for(;a<r;){if((s=t.charCodeAt(i=a++))===E)l=!0;else if(s===L)l=!0,t.charCodeAt(a)===E&&++a;else if(s!==e)continue;return t.slice(n,i)}return o=!0,t.slice(n,r)}for(t.charCodeAt(r-1)===E&&--r,t.charCodeAt(r-1)===L&&--r;(s=c())!==T;){for(var u=[];s!==C&&s!==T;)u.push(s),s=c();i&&null==(u=i(u,h++))||n.push(u)}return n}function n(i,e){return i.map(function(i){return e.map(function(t){return a(i[t])}).join(t)})}function r(i){return i.map(a).join(t)}function a(t){return null==t?"":t instanceof Date?D(t):i.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,i){var e,n,r=s(t,function(t,s){if(e)return e(t,s-1);n=t,e=i?function(t,i){var e=O(t);return function(s,n){return i(e(s),n,t)}}(t,i):O(t)});return r.columns=n||[],r},parseRows:s,format:function(i,e){return null==e&&(e=I(i)),[e.map(a).join(t)].concat(n(i,e)).join("\n")},formatBody:function(t,i){return null==i&&(i=I(t)),n(t,i).join("\n")},formatRows:function(t){return t.map(r).join("\n")}}},Z=Y(","),B=Z.parse,W=(Z.parseRows,Z.format,Z.formatBody,Z.formatRows,Y("\t")),q=W.parse;W.parseRows,W.format,W.formatBody,W.formatRows;function N(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var V=function(t,i){return fetch(t,i).then(N)},H=R(B),X=R(q);function U(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var K=function(t,i){return fetch(t,i).then(U)};function Q(t){return function(i,e){return V(i,e).then(function(i){return(new DOMParser).parseFromString(i,t)})}}var J,_,$;Q("application/xml"),Q("text/html"),Q("image/svg+xml");var tt=function(t,i){if((e=(t=i?t.toExponential(i-1):t.toExponential()).indexOf("e"))<0)return null;var e,s=t.slice(0,e);return[s.length>1?s[0]+s.slice(2):s,+t.slice(e+1)]},it=function(t){return(t=tt(Math.abs(t)))?t[1]:NaN},et=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function st(t){if(!(i=et.exec(t)))throw new Error("invalid format: "+t);var i;return new nt({fill:i[1],align:i[2],sign:i[3],symbol:i[4],zero:i[5],width:i[6],comma:i[7],precision:i[8]&&i[8].slice(1),trim:i[9],type:i[10]})}function nt(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}st.prototype=nt.prototype,nt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var rt,at=function(t){t:for(var i,e=t.length,s=1,n=-1;s<e;++s)switch(t[s]){case".":n=i=s;break;case"0":0===n&&(n=s),i=s;break;default:if(n>0){if(!+t[s])break t;n=0}}return n>0?t.slice(0,n)+t.slice(i+1):t},ht=function(t,i){var e=tt(t,i);if(!e)return t+"";var s=e[0],n=e[1];return n<0?"0."+new Array(-n).join("0")+s:s.length>n+1?s.slice(0,n+1)+"."+s.slice(n+1):s+new Array(n-s.length+2).join("0")},ot={"%":function(t,i){return(100*t).toFixed(i)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,i){return t.toExponential(i)},f:function(t,i){return t.toFixed(i)},g:function(t,i){return t.toPrecision(i)},o:function(t){return Math.round(t).toString(8)},p:function(t,i){return ht(100*t,i)},r:ht,s:function(t,i){var e=tt(t,i);if(!e)return t+"";var s=e[0],n=e[1],r=n-(rt=3*Math.max(-8,Math.min(8,Math.floor(n/3))))+1,a=s.length;return r===a?s:r>a?s+new Array(r-a+1).join("0"):r>0?s.slice(0,r)+"."+s.slice(r):"0."+new Array(1-r).join("0")+tt(t,Math.max(0,i+r-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},lt=function(t){return t},ct=Array.prototype.map,ut=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],ft=function(t){var i=void 0===t.grouping||void 0===t.thousands?lt:function(t,i){return function(e,s){for(var n=e.length,r=[],a=0,h=t[0],o=0;n>0&&h>0&&(o+h+1>s&&(h=Math.max(1,s-o)),r.push(e.substring(n-=h,n+h)),!((o+=h+1)>s));)h=t[a=(a+1)%t.length];return r.reverse().join(i)}}(ct.call(t.grouping,Number),t.thousands+""),e=void 0===t.currency?"":t.currency[0]+"",s=void 0===t.currency?"":t.currency[1]+"",n=void 0===t.decimal?".":t.decimal+"",r=void 0===t.numerals?lt:function(t){return function(i){return i.replace(/[0-9]/g,function(i){return t[+i]})}}(ct.call(t.numerals,String)),a=void 0===t.percent?"%":t.percent+"",h=void 0===t.minus?"-":t.minus+"",o=void 0===t.nan?"NaN":t.nan+"";function l(t){var l=(t=st(t)).fill,c=t.align,u=t.sign,f=t.symbol,d=t.zero,g=t.width,p=t.comma,m=t.precision,y=t.trim,A=t.type;"n"===A?(p=!0,A="g"):ot[A]||(void 0===m&&(m=12),y=!0,A="g"),(d||"0"===l&&"="===c)&&(d=!0,l="0",c="=");var x="$"===f?e:"#"===f&&/[boxX]/.test(A)?"0"+A.toLowerCase():"",v="$"===f?s:/[%p]/.test(A)?a:"",b=ot[A],w=/[defgprs%]/.test(A);function S(t){var e,s,a,f=x,S=v;if("c"===A)S=b(t)+S,t="";else{var M=(t=+t)<0;if(t=isNaN(t)?o:b(Math.abs(t),m),y&&(t=at(t)),M&&0==+t&&(M=!1),f=(M?"("===u?u:h:"-"===u||"("===u?"":u)+f,S=("s"===A?ut[8+rt/3]:"")+S+(M&&"("===u?")":""),w)for(e=-1,s=t.length;++e<s;)if(48>(a=t.charCodeAt(e))||a>57){S=(46===a?n+t.slice(e+1):t.slice(e))+S,t=t.slice(0,e);break}}p&&!d&&(t=i(t,1/0));var k=f.length+t.length+S.length,P=k<g?new Array(g-k+1).join(l):"";switch(p&&d&&(t=i(P+t,P.length?g-S.length:1/0),P=""),c){case"<":t=f+t+S+P;break;case"=":t=f+P+t+S;break;case"^":t=P.slice(0,k=P.length>>1)+f+t+S+P.slice(k);break;default:t=P+f+t+S}return r(t)}return m=void 0===m?6:/[gprs]/.test(A)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),S.toString=function(){return t+""},S}return{format:l,formatPrefix:function(t,i){var e=l(((t=st(t)).type="f",t)),s=3*Math.max(-8,Math.min(8,Math.floor(it(i)/3))),n=Math.pow(10,-s),r=ut[8+s/3];return function(t){return e(n*t)+r}}}};!function(t){J=ft(t),_=J.format,$=J.formatPrefix}({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"});function dt(){var t,i,e=yt().unknown(void 0),s=e.domain,n=e.range,r=0,a=1,h=!1,l=0,c=0,u=.5;function f(){var e=s().length,f=a<r,d=f?a:r,g=f?r:a;t=(g-d)/Math.max(1,e-l+2*c),h&&(t=Math.floor(t)),d+=(g-d-t*(e-l))*u,i=t*(1-l),h&&(d=Math.round(d),i=Math.round(i));var p=o(e).map(function(i){return d+t*i});return n(f?p.reverse():p)}return delete e.unknown,e.domain=function(t){return arguments.length?(s(t),f()):s()},e.range=function(t){return arguments.length?([r,a]=t,r=+r,a=+a,f()):[r,a]},e.rangeRound=function(t){return[r,a]=t,r=+r,a=+a,h=!0,f()},e.bandwidth=function(){return i},e.step=function(){return t},e.round=function(t){return arguments.length?(h=!!t,f()):h},e.padding=function(t){return arguments.length?(l=Math.min(1,c=+t),f()):l},e.paddingInner=function(t){return arguments.length?(l=Math.min(1,t),f()):l},e.paddingOuter=function(t){return arguments.length?(c=+t,f()):c},e.align=function(t){return arguments.length?(u=Math.max(0,Math.min(1,t)),f()):u},e.copy=function(){return dt(s(),[r,a]).round(h).paddingInner(l).paddingOuter(c).align(u)},pt.apply(f(),arguments)}function gt(){return function t(i){var e=i.copy;return i.padding=i.paddingOuter,delete i.paddingInner,delete i.paddingOuter,i.copy=function(){return t(e())},i}(dt.apply(null,arguments).paddingInner(1))}function pt(t,i){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(i).domain(t)}return this}const mt=Symbol("implicit");function yt(){var t=new Map,i=[],e=[],s=mt;function n(n){var r=n+"",a=t.get(r);if(!a){if(s!==mt)return s;t.set(r,a=i.push(n))}return e[(a-1)%e.length]}return n.domain=function(e){if(!arguments.length)return i.slice();i=[],t=new Map;for(const s of e){const e=s+"";t.has(e)||t.set(e,i.push(s))}return n},n.range=function(t){return arguments.length?(e=Array.from(t),n):e.slice()},n.unknown=function(t){return arguments.length?(s=t,n):s},n.copy=function(){return yt(i,e).unknown(s)},pt.apply(n,arguments),n}function At(){var t=function(){var t,i,e,s,n,r,a=Ji,h=Ji,o=Zi,l=_i;function c(){var t=Math.min(a.length,h.length);return l!==_i&&(l=function(t,i){var e;return t>i&&(e=t,t=i,i=e),function(e){return Math.max(t,Math.min(i,e))}}(a[0],a[t-1])),s=t>2?ie:te,n=r=null,u}function u(i){return isNaN(i=+i)?e:(n||(n=s(a.map(t),h,o)))(t(l(i)))}return u.invert=function(e){return l(i((r||(r=s(h,a.map(t),Ei)))(e)))},u.domain=function(t){return arguments.length?(a=Array.from(t,Qi),c()):a.slice()},u.range=function(t){return arguments.length?(h=Array.from(t),c()):h.slice()},u.rangeRound=function(t){return h=Array.from(t),o=Bi,c()},u.clamp=function(t){return arguments.length?(l=!!t||_i,c()):l!==_i},u.interpolate=function(t){return arguments.length?(o=t,c()):o},u.unknown=function(t){return arguments.length?(e=t,u):e},function(e,s){return t=e,i=s,c()}}()(_i,_i);return t.copy=function(){return function(t,i){return i.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}(t,At())},pt.apply(t,arguments),function(t){var i=t.domain;return t.ticks=function(t){var e=i();return f(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var s=i();return ee(s[0],s[s.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var s,n=i(),r=0,a=n.length-1,h=n[r],o=n[a];return o<h&&(s=h,h=o,o=s,s=r,r=a,a=s),(s=d(h,o,e))>0?s=d(h=Math.floor(h/s)*s,o=Math.ceil(o/s)*s,e):s<0&&(s=d(h=Math.ceil(h*s)/s,o=Math.floor(o*s)/s,e)),s>0?(n[r]=Math.floor(h/s)*s,n[a]=Math.ceil(o/s)*s,i(n)):s<0&&(n[r]=Math.ceil(h*s)/s,n[a]=Math.floor(o*s)/s,i(n)),t},t}(t)}function xt(){}var vt=function(t,i,e){t.prototype=i.prototype=e,e.constructor=t};function bt(t,i){var e=Object.create(t.prototype);for(var s in i)e[s]=i[s];return e}var wt=.7,St=1/wt,Mt="\\s*([+-]?\\d+)\\s*",kt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Pt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Ft=/^#([0-9a-f]{3})$/,zt=/^#([0-9a-f]{6})$/,Rt=new RegExp("^rgb\\("+[Mt,Mt,Mt]+"\\)$"),Ct=new RegExp("^rgb\\("+[Pt,Pt,Pt]+"\\)$"),Tt=new RegExp("^rgba\\("+[Mt,Mt,Mt,kt]+"\\)$"),jt=new RegExp("^rgba\\("+[Pt,Pt,Pt,kt]+"\\)$"),Et=new RegExp("^hsl\\("+[kt,Pt,Pt]+"\\)$"),Lt=new RegExp("^hsla\\("+[kt,Pt,Pt,kt]+"\\)$"),Ot={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function It(){return this.rgb().formatHex()}function Gt(){return this.rgb().formatRgb()}function Dt(t){var i;return t=(t+"").trim().toLowerCase(),(i=Ft.exec(t))?new qt((i=parseInt(i[1],16))>>8&15|i>>4&240,i>>4&15|240&i,(15&i)<<4|15&i,1):(i=zt.exec(t))?Yt(parseInt(i[1],16)):(i=Rt.exec(t))?new qt(i[1],i[2],i[3],1):(i=Ct.exec(t))?new qt(255*i[1]/100,255*i[2]/100,255*i[3]/100,1):(i=Tt.exec(t))?Zt(i[1],i[2],i[3],i[4]):(i=jt.exec(t))?Zt(255*i[1]/100,255*i[2]/100,255*i[3]/100,i[4]):(i=Et.exec(t))?Xt(i[1],i[2]/100,i[3]/100,1):(i=Lt.exec(t))?Xt(i[1],i[2]/100,i[3]/100,i[4]):Ot.hasOwnProperty(t)?Yt(Ot[t]):"transparent"===t?new qt(NaN,NaN,NaN,0):null}function Yt(t){return new qt(t>>16&255,t>>8&255,255&t,1)}function Zt(t,i,e,s){return s<=0&&(t=i=e=NaN),new qt(t,i,e,s)}function Bt(t){return t instanceof xt||(t=Dt(t)),t?new qt((t=t.rgb()).r,t.g,t.b,t.opacity):new qt}function Wt(t,i,e,s){return 1===arguments.length?Bt(t):new qt(t,i,e,null==s?1:s)}function qt(t,i,e,s){this.r=+t,this.g=+i,this.b=+e,this.opacity=+s}function Nt(){return"#"+Ht(this.r)+Ht(this.g)+Ht(this.b)}function Vt(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function Ht(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Xt(t,i,e,s){return s<=0?t=i=e=NaN:e<=0||e>=1?t=i=NaN:i<=0&&(t=NaN),new Qt(t,i,e,s)}function Ut(t){if(t instanceof Qt)return new Qt(t.h,t.s,t.l,t.opacity);if(t instanceof xt||(t=Dt(t)),!t)return new Qt;if(t instanceof Qt)return t;var i=(t=t.rgb()).r/255,e=t.g/255,s=t.b/255,n=Math.min(i,e,s),r=Math.max(i,e,s),a=NaN,h=r-n,o=(r+n)/2;return h?(a=i===r?(e-s)/h+6*(e<s):e===r?(s-i)/h+2:(i-e)/h+4,h/=o<.5?r+n:2-r-n,a*=60):h=o>0&&o<1?0:a,new Qt(a,h,o,t.opacity)}function Kt(t,i,e,s){return 1===arguments.length?Ut(t):new Qt(t,i,e,null==s?1:s)}function Qt(t,i,e,s){this.h=+t,this.s=+i,this.l=+e,this.opacity=+s}function Jt(t,i,e){return 255*(t<60?i+(e-i)*t/60:t<180?e:t<240?i+(e-i)*(240-t)/60:i)}vt(xt,Dt,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:It,formatHex:It,formatHsl:function(){return Ut(this).formatHsl()},formatRgb:Gt,toString:Gt}),vt(qt,Wt,bt(xt,{brighter:function(t){return t=null==t?St:Math.pow(St,t),new qt(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?wt:Math.pow(wt,t),new qt(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Nt,formatHex:Nt,formatRgb:Vt,toString:Vt})),vt(Qt,Kt,bt(xt,{brighter:function(t){return t=null==t?St:Math.pow(St,t),new Qt(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?wt:Math.pow(wt,t),new Qt(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),i=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,s=e+(e<.5?e:1-e)*i,n=2*e-s;return new qt(Jt(t>=240?t-240:t+120,n,s),Jt(t,n,s),Jt(t<120?t+240:t-120,n,s),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var _t=Math.PI/180,$t=180/Math.PI,ti=.96422,ii=1,ei=.82521,si=4/29,ni=6/29,ri=3*ni*ni,ai=ni*ni*ni;function hi(t){if(t instanceof oi)return new oi(t.l,t.a,t.b,t.opacity);if(t instanceof gi)return pi(t);t instanceof qt||(t=Bt(t));var i,e,s=fi(t.r),n=fi(t.g),r=fi(t.b),a=li((.2225045*s+.7168786*n+.0606169*r)/ii);return s===n&&n===r?i=e=a:(i=li((.4360747*s+.3850649*n+.1430804*r)/ti),e=li((.0139322*s+.0971045*n+.7141733*r)/ei)),new oi(116*a-16,500*(i-a),200*(a-e),t.opacity)}function oi(t,i,e,s){this.l=+t,this.a=+i,this.b=+e,this.opacity=+s}function li(t){return t>ai?Math.pow(t,1/3):t/ri+si}function ci(t){return t>ni?t*t*t:ri*(t-si)}function ui(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function fi(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function di(t,i,e,s){return 1===arguments.length?function(t){if(t instanceof gi)return new gi(t.h,t.c,t.l,t.opacity);if(t instanceof oi||(t=hi(t)),0===t.a&&0===t.b)return new gi(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var i=Math.atan2(t.b,t.a)*$t;return new gi(i<0?i+360:i,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new gi(t,i,e,null==s?1:s)}function gi(t,i,e,s){this.h=+t,this.c=+i,this.l=+e,this.opacity=+s}function pi(t){if(isNaN(t.h))return new oi(t.l,0,0,t.opacity);var i=t.h*_t;return new oi(t.l,Math.cos(i)*t.c,Math.sin(i)*t.c,t.opacity)}vt(oi,function(t,i,e,s){return 1===arguments.length?hi(t):new oi(t,i,e,null==s?1:s)},bt(xt,{brighter:function(t){return new oi(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new oi(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,i=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new qt(ui(3.1338561*(i=ti*ci(i))-1.6168667*(t=ii*ci(t))-.4906146*(e=ei*ci(e))),ui(-.9787684*i+1.9161415*t+.033454*e),ui(.0719453*i-.2289914*t+1.4052427*e),this.opacity)}})),vt(gi,di,bt(xt,{brighter:function(t){return new gi(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new gi(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return pi(this).rgb()}}));var mi=1.78277,yi=-.29227,Ai=-.90649,xi=1.97294,vi=xi*Ai,bi=xi*mi,wi=mi*yi- -.14861*Ai;function Si(t,i,e,s){return 1===arguments.length?function(t){if(t instanceof Mi)return new Mi(t.h,t.s,t.l,t.opacity);t instanceof qt||(t=Bt(t));var i=t.r/255,e=t.g/255,s=t.b/255,n=(wi*s+vi*i-bi*e)/(wi+vi-bi),r=s-n,a=(xi*(e-n)-yi*r)/Ai,h=Math.sqrt(a*a+r*r)/(xi*n*(1-n)),o=h?Math.atan2(a,r)*$t-120:NaN;return new Mi(o<0?o+360:o,h,n,t.opacity)}(t):new Mi(t,i,e,null==s?1:s)}function Mi(t,i,e,s){this.h=+t,this.s=+i,this.l=+e,this.opacity=+s}function ki(t,i,e,s,n){var r=t*t,a=r*t;return((1-3*t+3*r-a)*i+(4-6*r+3*a)*e+(1+3*t+3*r-3*a)*s+a*n)/6}vt(Mi,Si,bt(xt,{brighter:function(t){return t=null==t?St:Math.pow(St,t),new Mi(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?wt:Math.pow(wt,t),new Mi(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*_t,i=+this.l,e=isNaN(this.s)?0:this.s*i*(1-i),s=Math.cos(t),n=Math.sin(t);return new qt(255*(i+e*(-.14861*s+mi*n)),255*(i+e*(yi*s+Ai*n)),255*(i+e*(xi*s)),this.opacity)}}));function Pi(t,i){return function(e){return t+e*i}}function Fi(t,i){var e=i-t;return e?Pi(t,e>180||e<-180?e-360*Math.round(e/360):e):Ci(isNaN(t)?i:t)}function zi(t){return 1==(t=+t)?Ri:function(i,e){return e-i?function(t,i,e){return t=Math.pow(t,e),i=Math.pow(i,e)-t,e=1/e,function(s){return Math.pow(t+s*i,e)}}(i,e,t):Ci(isNaN(i)?e:i)}}function Ri(t,i){var e=i-t;return e?Pi(t,e):Ci(isNaN(t)?i:t)}var Ci=function(t){return function(){return t}},Ti=function t(i){var e=zi(i);function s(t,i){var s=e((t=Wt(t)).r,(i=Wt(i)).r),n=e(t.g,i.g),r=e(t.b,i.b),a=Ri(t.opacity,i.opacity);return function(i){return t.r=s(i),t.g=n(i),t.b=r(i),t.opacity=a(i),t+""}}return s.gamma=t,s}(1);function ji(t){return function(i){var e,s,n=i.length,r=new Array(n),a=new Array(n),h=new Array(n);for(e=0;e<n;++e)s=Wt(i[e]),r[e]=s.r||0,a[e]=s.g||0,h[e]=s.b||0;return r=t(r),a=t(a),h=t(h),s.opacity=1,function(t){return s.r=r(t),s.g=a(t),s.b=h(t),s+""}}}ji(function(t){var i=t.length-1;return function(e){var s=e<=0?e=0:e>=1?(e=1,i-1):Math.floor(e*i),n=t[s],r=t[s+1],a=s>0?t[s-1]:2*n-r,h=s<i-1?t[s+2]:2*r-n;return ki((e-s/i)*i,a,n,r,h)}}),ji(function(t){var i=t.length;return function(e){var s=Math.floor(((e%=1)<0?++e:e)*i),n=t[(s+i-1)%i],r=t[s%i],a=t[(s+1)%i],h=t[(s+2)%i];return ki((e-s/i)*i,n,r,a,h)}});var Ei=function(t,i){return i-=t=+t,function(e){return t+i*e}},Li=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Oi=new RegExp(Li.source,"g");var Ii,Gi,Di,Yi,Zi=function(t,i){var e,s=typeof i;return null==i||"boolean"===s?Ci(i):("number"===s?Ei:"string"===s?(e=Dt(i))?(i=e,Ti):function(t,i){var e,s,n,r=Li.lastIndex=Oi.lastIndex=0,a=-1,h=[],o=[];for(t+="",i+="";(e=Li.exec(t))&&(s=Oi.exec(i));)(n=s.index)>r&&(n=i.slice(r,n),h[a]?h[a]+=n:h[++a]=n),(e=e[0])===(s=s[0])?h[a]?h[a]+=s:h[++a]=s:(h[++a]=null,o.push({i:a,x:Ei(e,s)})),r=Oi.lastIndex;return r<i.length&&(n=i.slice(r),h[a]?h[a]+=n:h[++a]=n),h.length<2?o[0]?function(t){return function(i){return t(i)+""}}(o[0].x):function(t){return function(){return t}}(i):(i=o.length,function(t){for(var e,s=0;s<i;++s)h[(e=o[s]).i]=e.x(t);return h.join("")})}:i instanceof Dt?Ti:i instanceof Date?function(t,i){var e=new Date;return i-=t=+t,function(s){return e.setTime(t+i*s),e}}:Array.isArray(i)?function(t,i){var e,s=i?i.length:0,n=t?Math.min(s,t.length):0,r=new Array(n),a=new Array(s);for(e=0;e<n;++e)r[e]=Zi(t[e],i[e]);for(;e<s;++e)a[e]=i[e];return function(t){for(e=0;e<n;++e)a[e]=r[e](t);return a}}:"function"!=typeof i.valueOf&&"function"!=typeof i.toString||isNaN(i)?function(t,i){var e,s={},n={};for(e in null!==t&&"object"==typeof t||(t={}),null!==i&&"object"==typeof i||(i={}),i)e in t?s[e]=Zi(t[e],i[e]):n[e]=i[e];return function(t){for(e in s)n[e]=s[e](t);return n}}:Ei)(t,i)},Bi=function(t,i){return i-=t=+t,function(e){return Math.round(t+i*e)}};function Wi(t,i,e,s){function n(t){return t.length?t.pop()+" ":""}return function(r,a){var h=[],o=[];return r=t(r),a=t(a),function(t,s,n,r,a,h){if(t!==n||s!==r){var o=a.push("translate(",null,i,null,e);h.push({i:o-4,x:Ei(t,n)},{i:o-2,x:Ei(s,r)})}else(n||r)&&a.push("translate("+n+i+r+e)}(r.translateX,r.translateY,a.translateX,a.translateY,h,o),function(t,i,e,r){t!==i?(t-i>180?i+=360:i-t>180&&(t+=360),o.push({i:e.push(n(e)+"rotate(",null,s)-2,x:Ei(t,i)})):i&&e.push(n(e)+"rotate("+i+s)}(r.rotate,a.rotate,h),function(t,i,e,r){t!==i?o.push({i:e.push(n(e)+"skewX(",null,s)-2,x:Ei(t,i)}):i&&e.push(n(e)+"skewX("+i+s)}(r.skewX,a.skewX,h),function(t,i,e,s,r,a){if(t!==e||i!==s){var h=r.push(n(r)+"scale(",null,",",null,")");a.push({i:h-4,x:Ei(t,e)},{i:h-2,x:Ei(i,s)})}else 1===e&&1===s||r.push(n(r)+"scale("+e+","+s+")")}(r.scaleX,r.scaleY,a.scaleX,a.scaleY,h,o),r=a=null,function(t){for(var i,e=-1,s=o.length;++e<s;)h[(i=o[e]).i]=i.x(t);return h.join("")}}}var qi=180/Math.PI,Ni={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Vi=function(t,i,e,s,n,r){var a,h,o;return(a=Math.sqrt(t*t+i*i))&&(t/=a,i/=a),(o=t*e+i*s)&&(e-=t*o,s-=i*o),(h=Math.sqrt(e*e+s*s))&&(e/=h,s/=h,o/=h),t*s<i*e&&(t=-t,i=-i,o=-o,a=-a),{translateX:n,translateY:r,rotate:Math.atan2(i,t)*qi,skewX:Math.atan(o)*qi,scaleX:a,scaleY:h}};Wi(function(t){return"none"===t?Ni:(Ii||(Ii=document.createElement("DIV"),Gi=document.documentElement,Di=document.defaultView),Ii.style.transform=t,t=Di.getComputedStyle(Gi.appendChild(Ii),null).getPropertyValue("transform"),Gi.removeChild(Ii),t=t.slice(7,-1).split(","),Vi(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),Wi(function(t){return null==t?Ni:(Yi||(Yi=document.createElementNS("http://www.w3.org/2000/svg","g")),Yi.setAttribute("transform",t),(t=Yi.transform.baseVal.consolidate())?(t=t.matrix,Vi(t.a,t.b,t.c,t.d,t.e,t.f)):Ni)},", ",")",")"),Math.SQRT2;function Hi(t){return function(i,e){var s=t((i=Kt(i)).h,(e=Kt(e)).h),n=Ri(i.s,e.s),r=Ri(i.l,e.l),a=Ri(i.opacity,e.opacity);return function(t){return i.h=s(t),i.s=n(t),i.l=r(t),i.opacity=a(t),i+""}}}Hi(Fi),Hi(Ri);function Xi(t){return function(i,e){var s=t((i=di(i)).h,(e=di(e)).h),n=Ri(i.c,e.c),r=Ri(i.l,e.l),a=Ri(i.opacity,e.opacity);return function(t){return i.h=s(t),i.c=n(t),i.l=r(t),i.opacity=a(t),i+""}}}Xi(Fi),Xi(Ri);function Ui(t){return function i(e){function s(i,s){var n=t((i=Si(i)).h,(s=Si(s)).h),r=Ri(i.s,s.s),a=Ri(i.l,s.l),h=Ri(i.opacity,s.opacity);return function(t){return i.h=n(t),i.s=r(t),i.l=a(Math.pow(t,e)),i.opacity=h(t),i+""}}return e=+e,s.gamma=i,s}(1)}Ui(Fi),Ui(Ri);var Ki=function(t){return function(){return t}},Qi=function(t){return+t},Ji=[0,1];function _i(t){return t}function $i(t,i){return(i-=t=+t)?function(e){return(e-t)/i}:Ki(isNaN(i)?NaN:.5)}function te(t,i,e){var s=t[0],n=t[1],r=i[0],a=i[1];return n<s?(s=$i(n,s),r=e(a,r)):(s=$i(s,n),r=e(r,a)),function(t){return r(s(t))}}function ie(t,i,e){var s=Math.min(t.length,i.length)-1,n=new Array(s),r=new Array(s),h=-1;for(t[s]<t[0]&&(t=t.slice().reverse(),i=i.slice().reverse());++h<s;)n[h]=$i(t[h],t[h+1]),r[h]=e(i[h],i[h+1]);return function(i){var e=a(t,i,1,s)-1;return r[e](n[e](i))}}var ee=function(t,i,e,s){var n,r=function(t,i,e){var s=Math.abs(i-t)/Math.max(0,e),n=Math.pow(10,Math.floor(Math.log(s)/Math.LN10)),r=s/n;return r>=l?n*=10:r>=c?n*=5:r>=u&&(n*=2),i<t?-n:n}(t,i,e);switch((s=st(null==s?",f":s)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(i));return null!=s.precision||isNaN(n=function(t,i){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(it(i)/3)))-it(Math.abs(t)))}(r,a))||(s.precision=n),$(s,a);case"":case"e":case"g":case"p":case"r":null!=s.precision||isNaN(n=function(t,i){return t=Math.abs(t),i=Math.abs(i)-t,Math.max(0,it(i)-it(t))+1}(r,Math.max(Math.abs(t),Math.abs(i))))||(s.precision=n-("e"===s.type));break;case"f":case"%":null!=s.precision||isNaN(n=function(t){return Math.max(0,-it(Math.abs(t)))}(r))||(s.precision=n-2*("%"===s.type))}return _(s)},se=new Date,ne=new Date;function re(t,i,e,s){function n(i){return t(i=new Date(+i)),i}return n.floor=n,n.ceil=function(e){return t(e=new Date(e-1)),i(e,1),t(e),e},n.round=function(t){var i=n(t),e=n.ceil(t);return t-i<e-t?i:e},n.offset=function(t,e){return i(t=new Date(+t),null==e?1:Math.floor(e)),t},n.range=function(e,s,r){var a,h=[];if(e=n.ceil(e),r=null==r?1:Math.floor(r),!(e<s&&r>0))return h;do{h.push(a=new Date(+e)),i(e,r),t(e)}while(a<e&&e<s);return h},n.filter=function(e){return re(function(i){if(i>=i)for(;t(i),!e(i);)i.setTime(i-1)},function(t,s){if(t>=t)if(s<0)for(;++s<=0;)for(;i(t,-1),!e(t););else for(;--s>=0;)for(;i(t,1),!e(t););})},e&&(n.count=function(i,s){return se.setTime(+i),ne.setTime(+s),t(se),t(ne),Math.floor(e(se,ne))},n.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?n.filter(s?function(i){return s(i)%t==0}:function(i){return n.count(0,i)%t==0}):n:null}),n}var ae=re(function(){},function(t,i){t.setTime(+t+i)},function(t,i){return i-t});ae.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?re(function(i){i.setTime(Math.floor(i/t)*t)},function(i,e){i.setTime(+i+e*t)},function(i,e){return(e-i)/t}):ae:null};ae.range;var he=6e4,oe=6048e5,le=(re(function(t){t.setTime(t-t.getMilliseconds())},function(t,i){t.setTime(+t+1e3*i)},function(t,i){return(i-t)/1e3},function(t){return t.getUTCSeconds()}).range,re(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())},function(t,i){t.setTime(+t+i*he)},function(t,i){return(i-t)/he},function(t){return t.getMinutes()}).range,re(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-t.getMinutes()*he)},function(t,i){t.setTime(+t+36e5*i)},function(t,i){return(i-t)/36e5},function(t){return t.getHours()}).range,re(function(t){t.setHours(0,0,0,0)},function(t,i){t.setDate(t.getDate()+i)},function(t,i){return(i-t-(i.getTimezoneOffset()-t.getTimezoneOffset())*he)/864e5},function(t){return t.getDate()-1}));le.range;function ce(t){return re(function(i){i.setDate(i.getDate()-(i.getDay()+7-t)%7),i.setHours(0,0,0,0)},function(t,i){t.setDate(t.getDate()+7*i)},function(t,i){return(i-t-(i.getTimezoneOffset()-t.getTimezoneOffset())*he)/oe})}var ue=ce(0),fe=ce(1),de=ce(2),ge=ce(3),pe=ce(4),me=ce(5),ye=ce(6),Ae=(ue.range,fe.range,de.range,ge.range,pe.range,me.range,ye.range,re(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,i){t.setMonth(t.getMonth()+i)},function(t,i){return i.getMonth()-t.getMonth()+12*(i.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}).range,re(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,i){t.setFullYear(t.getFullYear()+i)},function(t,i){return i.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));Ae.every=function(t){return isFinite(t=Math.floor(t))&&t>0?re(function(i){i.setFullYear(Math.floor(i.getFullYear()/t)*t),i.setMonth(0,1),i.setHours(0,0,0,0)},function(i,e){i.setFullYear(i.getFullYear()+e*t)}):null};Ae.range,re(function(t){t.setUTCSeconds(0,0)},function(t,i){t.setTime(+t+i*he)},function(t,i){return(i-t)/he},function(t){return t.getUTCMinutes()}).range,re(function(t){t.setUTCMinutes(0,0,0)},function(t,i){t.setTime(+t+36e5*i)},function(t,i){return(i-t)/36e5},function(t){return t.getUTCHours()}).range;var xe=re(function(t){t.setUTCHours(0,0,0,0)},function(t,i){t.setUTCDate(t.getUTCDate()+i)},function(t,i){return(i-t)/864e5},function(t){return t.getUTCDate()-1});xe.range;function ve(t){return re(function(i){i.setUTCDate(i.getUTCDate()-(i.getUTCDay()+7-t)%7),i.setUTCHours(0,0,0,0)},function(t,i){t.setUTCDate(t.getUTCDate()+7*i)},function(t,i){return(i-t)/oe})}var be=ve(0),we=ve(1),Se=ve(2),Me=ve(3),ke=ve(4),Pe=ve(5),Fe=ve(6),ze=(be.range,we.range,Se.range,Me.range,ke.range,Pe.range,Fe.range,re(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,i){t.setUTCMonth(t.getUTCMonth()+i)},function(t,i){return i.getUTCMonth()-t.getUTCMonth()+12*(i.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}).range,re(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,i){t.setUTCFullYear(t.getUTCFullYear()+i)},function(t,i){return i.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));ze.every=function(t){return isFinite(t=Math.floor(t))&&t>0?re(function(i){i.setUTCFullYear(Math.floor(i.getUTCFullYear()/t)*t),i.setUTCMonth(0,1),i.setUTCHours(0,0,0,0)},function(i,e){i.setUTCFullYear(i.getUTCFullYear()+e*t)}):null};var Re,Ce,Te;ze.range;function je(t){if(0<=t.y&&t.y<100){var i=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return i.setFullYear(t.y),i}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Ee(t){if(0<=t.y&&t.y<100){var i=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return i.setUTCFullYear(t.y),i}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Le(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var Oe={"-":"",_:" ",0:"0"},Ie=/^\s*\d+/,Ge=/^%/,De=/[\\^$*+?|[\]().{}]/g;function Ye(t,i,e){var s=t<0?"-":"",n=(s?-t:t)+"",r=n.length;return s+(r<e?new Array(e-r+1).join(i)+n:n)}function Ze(t){return t.replace(De,"\\$&")}function Be(t){return new RegExp("^(?:"+t.map(Ze).join("|")+")","i")}function We(t){for(var i={},e=-1,s=t.length;++e<s;)i[t[e].toLowerCase()]=e;return i}function qe(t,i,e){var s=Ie.exec(i.slice(e,e+1));return s?(t.w=+s[0],e+s[0].length):-1}function Ne(t,i,e){var s=Ie.exec(i.slice(e,e+1));return s?(t.u=+s[0],e+s[0].length):-1}function Ve(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.U=+s[0],e+s[0].length):-1}function He(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.V=+s[0],e+s[0].length):-1}function Xe(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.W=+s[0],e+s[0].length):-1}function Ue(t,i,e){var s=Ie.exec(i.slice(e,e+4));return s?(t.y=+s[0],e+s[0].length):-1}function Ke(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.y=+s[0]+(+s[0]>68?1900:2e3),e+s[0].length):-1}function Qe(t,i,e){var s=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(i.slice(e,e+6));return s?(t.Z=s[1]?0:-(s[2]+(s[3]||"00")),e+s[0].length):-1}function Je(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.m=s[0]-1,e+s[0].length):-1}function _e(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.d=+s[0],e+s[0].length):-1}function $e(t,i,e){var s=Ie.exec(i.slice(e,e+3));return s?(t.m=0,t.d=+s[0],e+s[0].length):-1}function ts(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.H=+s[0],e+s[0].length):-1}function is(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.M=+s[0],e+s[0].length):-1}function es(t,i,e){var s=Ie.exec(i.slice(e,e+2));return s?(t.S=+s[0],e+s[0].length):-1}function ss(t,i,e){var s=Ie.exec(i.slice(e,e+3));return s?(t.L=+s[0],e+s[0].length):-1}function ns(t,i,e){var s=Ie.exec(i.slice(e,e+6));return s?(t.L=Math.floor(s[0]/1e3),e+s[0].length):-1}function rs(t,i,e){var s=Ge.exec(i.slice(e,e+1));return s?e+s[0].length:-1}function as(t,i,e){var s=Ie.exec(i.slice(e));return s?(t.Q=+s[0],e+s[0].length):-1}function hs(t,i,e){var s=Ie.exec(i.slice(e));return s?(t.Q=1e3*+s[0],e+s[0].length):-1}function os(t,i){return Ye(t.getDate(),i,2)}function ls(t,i){return Ye(t.getHours(),i,2)}function cs(t,i){return Ye(t.getHours()%12||12,i,2)}function us(t,i){return Ye(1+le.count(Ae(t),t),i,3)}function fs(t,i){return Ye(t.getMilliseconds(),i,3)}function ds(t,i){return fs(t,i)+"000"}function gs(t,i){return Ye(t.getMonth()+1,i,2)}function ps(t,i){return Ye(t.getMinutes(),i,2)}function ms(t,i){return Ye(t.getSeconds(),i,2)}function ys(t){var i=t.getDay();return 0===i?7:i}function As(t,i){return Ye(ue.count(Ae(t),t),i,2)}function xs(t,i){var e=t.getDay();return t=e>=4||0===e?pe(t):pe.ceil(t),Ye(pe.count(Ae(t),t)+(4===Ae(t).getDay()),i,2)}function vs(t){return t.getDay()}function bs(t,i){return Ye(fe.count(Ae(t),t),i,2)}function ws(t,i){return Ye(t.getFullYear()%100,i,2)}function Ss(t,i){return Ye(t.getFullYear()%1e4,i,4)}function Ms(t){var i=t.getTimezoneOffset();return(i>0?"-":(i*=-1,"+"))+Ye(i/60|0,"0",2)+Ye(i%60,"0",2)}function ks(t,i){return Ye(t.getUTCDate(),i,2)}function Ps(t,i){return Ye(t.getUTCHours(),i,2)}function Fs(t,i){return Ye(t.getUTCHours()%12||12,i,2)}function zs(t,i){return Ye(1+xe.count(ze(t),t),i,3)}function Rs(t,i){return Ye(t.getUTCMilliseconds(),i,3)}function Cs(t,i){return Rs(t,i)+"000"}function Ts(t,i){return Ye(t.getUTCMonth()+1,i,2)}function js(t,i){return Ye(t.getUTCMinutes(),i,2)}function Es(t,i){return Ye(t.getUTCSeconds(),i,2)}function Ls(t){var i=t.getUTCDay();return 0===i?7:i}function Os(t,i){return Ye(be.count(ze(t),t),i,2)}function Is(t,i){var e=t.getUTCDay();return t=e>=4||0===e?ke(t):ke.ceil(t),Ye(ke.count(ze(t),t)+(4===ze(t).getUTCDay()),i,2)}function Gs(t){return t.getUTCDay()}function Ds(t,i){return Ye(we.count(ze(t),t),i,2)}function Ys(t,i){return Ye(t.getUTCFullYear()%100,i,2)}function Zs(t,i){return Ye(t.getUTCFullYear()%1e4,i,4)}function Bs(){return"+0000"}function Ws(){return"%"}function qs(t){return+t}function Ns(t){return Math.floor(+t/1e3)}!function(t){Re=function(t){var i=t.dateTime,e=t.date,s=t.time,n=t.periods,r=t.days,a=t.shortDays,h=t.months,o=t.shortMonths,l=Be(n),c=We(n),u=Be(r),f=We(r),d=Be(a),g=We(a),p=Be(h),m=We(h),y=Be(o),A=We(o),x={a:function(t){return a[t.getDay()]},A:function(t){return r[t.getDay()]},b:function(t){return o[t.getMonth()]},B:function(t){return h[t.getMonth()]},c:null,d:os,e:os,f:ds,H:ls,I:cs,j:us,L:fs,m:gs,M:ps,p:function(t){return n[+(t.getHours()>=12)]},Q:qs,s:Ns,S:ms,u:ys,U:As,V:xs,w:vs,W:bs,x:null,X:null,y:ws,Y:Ss,Z:Ms,"%":Ws},v={a:function(t){return a[t.getUTCDay()]},A:function(t){return r[t.getUTCDay()]},b:function(t){return o[t.getUTCMonth()]},B:function(t){return h[t.getUTCMonth()]},c:null,d:ks,e:ks,f:Cs,H:Ps,I:Fs,j:zs,L:Rs,m:Ts,M:js,p:function(t){return n[+(t.getUTCHours()>=12)]},Q:qs,s:Ns,S:Es,u:Ls,U:Os,V:Is,w:Gs,W:Ds,x:null,X:null,y:Ys,Y:Zs,Z:Bs,"%":Ws},b={a:function(t,i,e){var s=d.exec(i.slice(e));return s?(t.w=g[s[0].toLowerCase()],e+s[0].length):-1},A:function(t,i,e){var s=u.exec(i.slice(e));return s?(t.w=f[s[0].toLowerCase()],e+s[0].length):-1},b:function(t,i,e){var s=y.exec(i.slice(e));return s?(t.m=A[s[0].toLowerCase()],e+s[0].length):-1},B:function(t,i,e){var s=p.exec(i.slice(e));return s?(t.m=m[s[0].toLowerCase()],e+s[0].length):-1},c:function(t,e,s){return M(t,i,e,s)},d:_e,e:_e,f:ns,H:ts,I:ts,j:$e,L:ss,m:Je,M:is,p:function(t,i,e){var s=l.exec(i.slice(e));return s?(t.p=c[s[0].toLowerCase()],e+s[0].length):-1},Q:as,s:hs,S:es,u:Ne,U:Ve,V:He,w:qe,W:Xe,x:function(t,i,s){return M(t,e,i,s)},X:function(t,i,e){return M(t,s,i,e)},y:Ke,Y:Ue,Z:Qe,"%":rs};function w(t,i){return function(e){var s,n,r,a=[],h=-1,o=0,l=t.length;for(e instanceof Date||(e=new Date(+e));++h<l;)37===t.charCodeAt(h)&&(a.push(t.slice(o,h)),null!=(n=Oe[s=t.charAt(++h)])?s=t.charAt(++h):n="e"===s?" ":"0",(r=i[s])&&(s=r(e,n)),a.push(s),o=h+1);return a.push(t.slice(o,h)),a.join("")}}function S(t,i){return function(e){var s,n,r=Le(1900);if(M(r,t,e+="",0)!=e.length)return null;if("Q"in r)return new Date(r.Q);if("p"in r&&(r.H=r.H%12+12*r.p),"V"in r){if(r.V<1||r.V>53)return null;"w"in r||(r.w=1),"Z"in r?(n=(s=Ee(Le(r.y))).getUTCDay(),s=n>4||0===n?we.ceil(s):we(s),s=xe.offset(s,7*(r.V-1)),r.y=s.getUTCFullYear(),r.m=s.getUTCMonth(),r.d=s.getUTCDate()+(r.w+6)%7):(n=(s=i(Le(r.y))).getDay(),s=n>4||0===n?fe.ceil(s):fe(s),s=le.offset(s,7*(r.V-1)),r.y=s.getFullYear(),r.m=s.getMonth(),r.d=s.getDate()+(r.w+6)%7)}else("W"in r||"U"in r)&&("w"in r||(r.w="u"in r?r.u%7:"W"in r?1:0),n="Z"in r?Ee(Le(r.y)).getUTCDay():i(Le(r.y)).getDay(),r.m=0,r.d="W"in r?(r.w+6)%7+7*r.W-(n+5)%7:r.w+7*r.U-(n+6)%7);return"Z"in r?(r.H+=r.Z/100|0,r.M+=r.Z%100,Ee(r)):i(r)}}function M(t,i,e,s){for(var n,r,a=0,h=i.length,o=e.length;a<h;){if(s>=o)return-1;if(37===(n=i.charCodeAt(a++))){if(n=i.charAt(a++),!(r=b[n in Oe?i.charAt(a++):n])||(s=r(t,e,s))<0)return-1}else if(n!=e.charCodeAt(s++))return-1}return s}return x.x=w(e,x),x.X=w(s,x),x.c=w(i,x),v.x=w(e,v),v.X=w(s,v),v.c=w(i,v),{format:function(t){var i=w(t+="",x);return i.toString=function(){return t},i},parse:function(t){var i=S(t+="",je);return i.toString=function(){return t},i},utcFormat:function(t){var i=w(t+="",v);return i.toString=function(){return t},i},utcParse:function(t){var i=S(t,Ee);return i.toString=function(){return t},i}}}(t),Re.format,Re.parse,Ce=Re.utcFormat,Te=Re.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Vs="%Y-%m-%dT%H:%M:%S.%LZ";Date.prototype.toISOString||Ce(Vs);+new Date("2000-01-01T00:00:00.000Z")||Te(Vs);var Hs="http://www.w3.org/1999/xhtml",Xs={svg:"http://www.w3.org/2000/svg",xhtml:Hs,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Us=function(t){var i=t+="",e=i.indexOf(":");return e>=0&&"xmlns"!==(i=t.slice(0,e))&&(t=t.slice(e+1)),Xs.hasOwnProperty(i)?{space:Xs[i],local:t}:t},Ks=function(t){var i=Us(t);return(i.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var i=this.ownerDocument,e=this.namespaceURI;return e===Hs&&i.documentElement.namespaceURI===Hs?i.createElement(t):i.createElementNS(e,t)}})(i)};function Qs(){}var Js=function(t){return null==t?Qs:function(){return this.querySelector(t)}};function _s(){return[]}var $s=function(t){return new Array(t.length)};function tn(t,i){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=i}tn.prototype={constructor:tn,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,i){return this._parent.insertBefore(t,i)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var en="$";function sn(t,i,e,s,n,r){for(var a,h=0,o=i.length,l=r.length;h<l;++h)(a=i[h])?(a.__data__=r[h],s[h]=a):e[h]=new tn(t,r[h]);for(;h<o;++h)(a=i[h])&&(n[h]=a)}function nn(t,i,e,s,n,r,a){var h,o,l,c={},u=i.length,f=r.length,d=new Array(u);for(h=0;h<u;++h)(o=i[h])&&(d[h]=l=en+a.call(o,o.__data__,h,i),l in c?n[h]=o:c[l]=o);for(h=0;h<f;++h)(o=c[l=en+a.call(t,r[h],h,r)])?(s[h]=o,o.__data__=r[h],c[l]=null):e[h]=new tn(t,r[h]);for(h=0;h<u;++h)(o=i[h])&&c[d[h]]===o&&(n[h]=o)}function rn(t,i){return t<i?-1:t>i?1:t>=i?0:NaN}var an=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function hn(t){return t.trim().split(/^|\s+/)}function on(t){return t.classList||new ln(t)}function ln(t){this._node=t,this._names=hn(t.getAttribute("class")||"")}function cn(t,i){for(var e=on(t),s=-1,n=i.length;++s<n;)e.add(i[s])}function un(t,i){for(var e=on(t),s=-1,n=i.length;++s<n;)e.remove(i[s])}ln.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var i=this._names.indexOf(t);i>=0&&(this._names.splice(i,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function fn(){this.textContent=""}function dn(){this.innerHTML=""}function gn(){this.nextSibling&&this.parentNode.appendChild(this)}function pn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function mn(){return null}function yn(){var t=this.parentNode;t&&t.removeChild(this)}function An(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function xn(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var vn={},bn=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(vn={mouseenter:"mouseover",mouseleave:"mouseout"}));function wn(t,i,e){return t=Sn(t,i,e),function(i){var e=i.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,i)}}function Sn(t,i,e){return function(s){var n=bn;bn=s;try{t.call(this,this.__data__,i,e)}finally{bn=n}}}function Mn(t){return function(){var i=this.__on;if(i){for(var e,s=0,n=-1,r=i.length;s<r;++s)e=i[s],t.type&&e.type!==t.type||e.name!==t.name?i[++n]=e:this.removeEventListener(e.type,e.listener,e.capture);++n?i.length=n:delete this.__on}}}function kn(t,i,e){var s=vn.hasOwnProperty(t.type)?wn:Sn;return function(n,r,a){var h,o=this.__on,l=s(i,r,a);if(o)for(var c=0,u=o.length;c<u;++c)if((h=o[c]).type===t.type&&h.name===t.name)return this.removeEventListener(h.type,h.listener,h.capture),this.addEventListener(h.type,h.listener=l,h.capture=e),void(h.value=i);this.addEventListener(t.type,l,e),h={type:t.type,name:t.name,value:i,listener:l,capture:e},o?o.push(h):this.__on=[h]}}function Pn(t,i,e){var s=an(t),n=s.CustomEvent;"function"==typeof n?n=new n(i,e):(n=s.document.createEvent("Event"),e?(n.initEvent(i,e.bubbles,e.cancelable),n.detail=e.detail):n.initEvent(i,!1,!1)),t.dispatchEvent(n)}var Fn=[null];function zn(t,i){this._groups=t,this._parents=i}zn.prototype=function(){return new zn([[document.documentElement]],Fn)}.prototype={constructor:zn,select:function(t){"function"!=typeof t&&(t=Js(t));for(var i=this._groups,e=i.length,s=new Array(e),n=0;n<e;++n)for(var r,a,h=i[n],o=h.length,l=s[n]=new Array(o),c=0;c<o;++c)(r=h[c])&&(a=t.call(r,r.__data__,c,h))&&("__data__"in r&&(a.__data__=r.__data__),l[c]=a);return new zn(s,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=function(t){return null==t?_s:function(){return this.querySelectorAll(t)}}(t));for(var i=this._groups,e=i.length,s=[],n=[],r=0;r<e;++r)for(var a,h=i[r],o=h.length,l=0;l<o;++l)(a=h[l])&&(s.push(t.call(a,a.__data__,l,h)),n.push(a));return new zn(s,n)},filter:function(t){"function"!=typeof t&&(t=function(t){return function(){return this.matches(t)}}(t));for(var i=this._groups,e=i.length,s=new Array(e),n=0;n<e;++n)for(var r,a=i[n],h=a.length,o=s[n]=[],l=0;l<h;++l)(r=a[l])&&t.call(r,r.__data__,l,a)&&o.push(r);return new zn(s,this._parents)},data:function(t,i){if(!t)return d=new Array(this.size()),l=-1,this.each(function(t){d[++l]=t}),d;var e=i?nn:sn,s=this._parents,n=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var r=n.length,a=new Array(r),h=new Array(r),o=new Array(r),l=0;l<r;++l){var c=s[l],u=n[l],f=u.length,d=t.call(c,c&&c.__data__,l,s),g=d.length,p=h[l]=new Array(g),m=a[l]=new Array(g);e(c,u,p,m,o[l]=new Array(f),d,i);for(var y,A,x=0,v=0;x<g;++x)if(y=p[x]){for(x>=v&&(v=x+1);!(A=m[v])&&++v<g;);y._next=A||null}}return(a=new zn(a,s))._enter=h,a._exit=o,a},enter:function(){return new zn(this._enter||this._groups.map($s),this._parents)},exit:function(){return new zn(this._exit||this._groups.map($s),this._parents)},join:function(t,i,e){var s=this.enter(),n=this,r=this.exit();return s="function"==typeof t?t(s):s.append(t+""),null!=i&&(n=i(n)),null==e?r.remove():e(r),s&&n?s.merge(n).order():n},merge:function(t){for(var i=this._groups,e=t._groups,s=i.length,n=e.length,r=Math.min(s,n),a=new Array(s),h=0;h<r;++h)for(var o,l=i[h],c=e[h],u=l.length,f=a[h]=new Array(u),d=0;d<u;++d)(o=l[d]||c[d])&&(f[d]=o);for(;h<s;++h)a[h]=i[h];return new zn(a,this._parents)},order:function(){for(var t=this._groups,i=-1,e=t.length;++i<e;)for(var s,n=t[i],r=n.length-1,a=n[r];--r>=0;)(s=n[r])&&(a&&4^s.compareDocumentPosition(a)&&a.parentNode.insertBefore(s,a),a=s);return this},sort:function(t){function i(i,e){return i&&e?t(i.__data__,e.__data__):!i-!e}t||(t=rn);for(var e=this._groups,s=e.length,n=new Array(s),r=0;r<s;++r){for(var a,h=e[r],o=h.length,l=n[r]=new Array(o),c=0;c<o;++c)(a=h[c])&&(l[c]=a);l.sort(i)}return new zn(n,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),i=-1;return this.each(function(){t[++i]=this}),t},node:function(){for(var t=this._groups,i=0,e=t.length;i<e;++i)for(var s=t[i],n=0,r=s.length;n<r;++n){var a=s[n];if(a)return a}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var i=this._groups,e=0,s=i.length;e<s;++e)for(var n,r=i[e],a=0,h=r.length;a<h;++a)(n=r[a])&&t.call(n,n.__data__,a,r);return this},attr:function(t,i){var e=Us(t);if(arguments.length<2){var s=this.node();return e.local?s.getAttributeNS(e.space,e.local):s.getAttribute(e)}return this.each((null==i?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof i?e.local?function(t,i){return function(){var e=i.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,i){return function(){var e=i.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,i){return function(){this.setAttributeNS(t.space,t.local,i)}}:function(t,i){return function(){this.setAttribute(t,i)}})(e,i))},style:function(t,i,e){return arguments.length>1?this.each((null==i?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof i?function(t,i,e){return function(){var s=i.apply(this,arguments);null==s?this.style.removeProperty(t):this.style.setProperty(t,s,e)}}:function(t,i,e){return function(){this.style.setProperty(t,i,e)}})(t,i,null==e?"":e)):function(t,i){return t.style.getPropertyValue(i)||an(t).getComputedStyle(t,null).getPropertyValue(i)}(this.node(),t)},property:function(t,i){return arguments.length>1?this.each((null==i?function(t){return function(){delete this[t]}}:"function"==typeof i?function(t,i){return function(){var e=i.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,i){return function(){this[t]=i}})(t,i)):this.node()[t]},classed:function(t,i){var e=hn(t+"");if(arguments.length<2){for(var s=on(this.node()),n=-1,r=e.length;++n<r;)if(!s.contains(e[n]))return!1;return!0}return this.each(("function"==typeof i?function(t,i){return function(){(i.apply(this,arguments)?cn:un)(this,t)}}:i?function(t){return function(){cn(this,t)}}:function(t){return function(){un(this,t)}})(e,i))},text:function(t){return arguments.length?this.each(null==t?fn:("function"==typeof t?function(t){return function(){var i=t.apply(this,arguments);this.textContent=null==i?"":i}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?dn:("function"==typeof t?function(t){return function(){var i=t.apply(this,arguments);this.innerHTML=null==i?"":i}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(gn)},lower:function(){return this.each(pn)},append:function(t){var i="function"==typeof t?t:Ks(t);return this.select(function(){return this.appendChild(i.apply(this,arguments))})},insert:function(t,i){var e="function"==typeof t?t:Ks(t),s=null==i?mn:"function"==typeof i?i:Js(i);return this.select(function(){return this.insertBefore(e.apply(this,arguments),s.apply(this,arguments)||null)})},remove:function(){return this.each(yn)},clone:function(t){return this.select(t?xn:An)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,i,e){var s,n,r=function(t){return t.trim().split(/^|\s+/).map(function(t){var i="",e=t.indexOf(".");return e>=0&&(i=t.slice(e+1),t=t.slice(0,e)),{type:t,name:i}})}(t+""),a=r.length;if(!(arguments.length<2)){for(h=i?kn:Mn,null==e&&(e=!1),s=0;s<a;++s)this.each(h(r[s],i,e));return this}var h=this.node().__on;if(h)for(var o,l=0,c=h.length;l<c;++l)for(s=0,o=h[l];s<a;++s)if((n=r[s]).type===o.type&&n.name===o.name)return o.value},dispatch:function(t,i){return this.each(("function"==typeof i?function(t,i){return function(){return Pn(this,t,i.apply(this,arguments))}}:function(t,i){return function(){return Pn(this,t,i)}})(t,i))}};var Rn=function(t){return"string"==typeof t?new zn([[document.querySelector(t)]],[document.documentElement]):new zn([[t]],Fn)},Cn=0;function Tn(){this._="@"+(++Cn).toString(36)}Tn.prototype=function(){return new Tn}.prototype={constructor:Tn,get:function(t){for(var i=this._;!(i in t);)if(!(t=t.parentNode))return;return t[i]},set:function(t,i){return t[this._]=i},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var jn=function(t){var i=function(){for(var t,i=bn;t=i.sourceEvent;)i=t;return i}();return i.changedTouches&&(i=i.changedTouches[0]),function(t,i){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var s=e.createSVGPoint();return s.x=i.clientX,s.y=i.clientY,[(s=s.matrixTransform(t.getScreenCTM().inverse())).x,s.y]}var n=t.getBoundingClientRect();return[i.clientX-n.left-t.clientLeft,i.clientY-n.top-t.clientTop]}(t,i)},En=function(t){return"string"==typeof t?new zn([document.querySelectorAll(t)],[document.documentElement]):new zn([null==t?[]:t],Fn)},Ln={};!function(i,e){"object"==typeof Ln?Ln=e():"function"==typeof t&&t.amd?t(e):(i=i||self).rough=e()}(Ln,function(){const t="undefined"!=typeof self;class i{constructor(t,i){this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:"#000",strokeWidth:1,curveTightness:0,curveStepCount:9,fillStyle:"hachure",fillWeight:-1,hachureAngle:-41,hachureGap:-1,dashOffset:-1,dashGap:-1,zigzagOffset:-1},this.config=t||{},this.surface=i,this.config.options&&(this.defaultOptions=this._options(this.config.options))}_options(t){return t?Object.assign({},this.defaultOptions,t):this.defaultOptions}_drawable(t,i,e){return{shape:t,sets:i||[],options:e||this.defaultOptions}}getCanvasSize(){const t=t=>t&&"object"==typeof t&&t.baseVal&&t.baseVal.value?t.baseVal.value:t||100;return this.surface?[t(this.surface.width),t(this.surface.height)]:[100,100]}computePolygonSize(t){if(t.length){let i=t[0][0],e=t[0][0],s=t[0][1],n=t[0][1];for(let r=1;r<t.length;r++)i=Math.min(i,t[r][0]),e=Math.max(e,t[r][0]),s=Math.min(s,t[r][1]),n=Math.max(n,t[r][1]);return[e-i,n-s]}return[0,0]}polygonPath(t){let i="";if(t.length){i=`M${t[0][0]},${t[0][1]}`;for(let e=1;e<t.length;e++)i=`${i} L${t[e][0]},${t[e][1]}`}return i}computePathSize(i){let e=[0,0];if(t&&self.document)try{const s="http://www.w3.org/2000/svg",n=self.document.createElementNS(s,"svg");n.setAttribute("width","0"),n.setAttribute("height","0");const r=self.document.createElementNS(s,"path");r.setAttribute("d",i),n.appendChild(r),self.document.body.appendChild(n);const a=r.getBBox();a&&(e[0]=a.width||0,e[1]=a.height||0),self.document.body.removeChild(n)}catch(t){}const s=this.getCanvasSize();return e[0]*e[1]||(e=s),e}toPaths(t){const i=t.sets||[],e=t.options||this.defaultOptions,s=[];for(const n of i){let t=null;switch(n.type){case"path":t={d:this.opsToPath(n),stroke:e.stroke,strokeWidth:e.strokeWidth,fill:"none"};break;case"fillPath":t={d:this.opsToPath(n),stroke:"none",strokeWidth:0,fill:e.fill||"none"};break;case"fillSketch":t=this.fillSketch(n,e);break;case"path2Dfill":t={d:n.path||"",stroke:"none",strokeWidth:0,fill:e.fill||"none"};break;case"path2Dpattern":{const i=n.size,s={x:0,y:0,width:1,height:1,viewBox:`0 0 ${Math.round(i[0])} ${Math.round(i[1])}`,patternUnits:"objectBoundingBox",path:this.fillSketch(n,e)};t={d:n.path,stroke:"none",strokeWidth:0,pattern:s};break}}t&&s.push(t)}return s}fillSketch(t,i){let e=i.fillWeight;return e<0&&(e=i.strokeWidth/2),{d:this.opsToPath(t),stroke:i.fill||"none",strokeWidth:e,fill:"none"}}opsToPath(t){let i="";for(const e of t.ops){const t=e.data;switch(e.op){case"move":i+=`M${t[0]} ${t[1]} `;break;case"bcurveTo":i+=`C${t[0]} ${t[1]}, ${t[2]} ${t[3]}, ${t[4]} ${t[5]} `;break;case"qcurveTo":i+=`Q${t[0]} ${t[1]}, ${t[2]} ${t[3]} `;break;case"lineTo":i+=`L${t[0]} ${t[1]} `}}return i.trim()}}function e(t,i){return t.type===i}const s={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:4,t:2,V:1,v:1,Z:0,z:0};class n{constructor(t){this.COMMAND=0,this.NUMBER=1,this.EOD=2,this.segments=[],this.parseData(t),this.processPoints()}tokenize(t){const i=new Array;for(;""!==t;)if(t.match(/^([ \t\r\n,]+)/))t=t.substr(RegExp.$1.length);else if(t.match(/^([aAcChHlLmMqQsStTvVzZ])/))i[i.length]={type:this.COMMAND,text:RegExp.$1},t=t.substr(RegExp.$1.length);else{if(!t.match(/^(([-+]?[0-9]+(\.[0-9]*)?|[-+]?\.[0-9]+)([eE][-+]?[0-9]+)?)/))return console.error("Unrecognized segment command: "+t),[];i[i.length]={type:this.NUMBER,text:`${parseFloat(RegExp.$1)}`},t=t.substr(RegExp.$1.length)}return i[i.length]={type:this.EOD,text:""},i}parseData(t){const i=this.tokenize(t);let n=0,r=i[n],a="BOD";for(this.segments=new Array;!e(r,this.EOD);){let h;const o=new Array;if("BOD"===a){if("M"!==r.text&&"m"!==r.text)return void this.parseData("M0,0"+t);n++,h=s[r.text],a=r.text}else e(r,this.NUMBER)?h=s[a]:(n++,h=s[r.text],a=r.text);if(n+h<i.length){for(let t=n;t<n+h;t++){const s=i[t];if(!e(s,this.NUMBER))return void console.error("Parameter type is not a number: "+a+","+s.text);o[o.length]=+s.text}if("number"!=typeof s[a])return void console.error("Unsupported segment type: "+a);{const t={key:a,data:o};this.segments.push(t),r=i[n+=h],"M"===a&&(a="L"),"m"===a&&(a="l")}}else console.error("Path data ended before all parameters were found")}}get closed(){if(void 0===this._closed){this._closed=!1;for(const t of this.segments)"z"===t.key.toLowerCase()&&(this._closed=!0)}return this._closed}processPoints(){let t=null,i=[0,0];for(let e=0;e<this.segments.length;e++){const s=this.segments[e];switch(s.key){case"M":case"L":case"T":s.point=[s.data[0],s.data[1]];break;case"m":case"l":case"t":s.point=[s.data[0]+i[0],s.data[1]+i[1]];break;case"H":s.point=[s.data[0],i[1]];break;case"h":s.point=[s.data[0]+i[0],i[1]];break;case"V":s.point=[i[0],s.data[0]];break;case"v":s.point=[i[0],s.data[0]+i[1]];break;case"z":case"Z":t&&(s.point=[t[0],t[1]]);break;case"C":s.point=[s.data[4],s.data[5]];break;case"c":s.point=[s.data[4]+i[0],s.data[5]+i[1]];break;case"S":s.point=[s.data[2],s.data[3]];break;case"s":s.point=[s.data[2]+i[0],s.data[3]+i[1]];break;case"Q":s.point=[s.data[2],s.data[3]];break;case"q":s.point=[s.data[2]+i[0],s.data[3]+i[1]];break;case"A":s.point=[s.data[5],s.data[6]];break;case"a":s.point=[s.data[5]+i[0],s.data[6]+i[1]]}"m"!==s.key&&"M"!==s.key||(t=null),s.point&&(i=s.point,t||(t=s.point)),"z"!==s.key&&"Z"!==s.key||(t=null)}}}class r{constructor(t){this._position=[0,0],this._first=null,this.bezierReflectionPoint=null,this.quadReflectionPoint=null,this.parsed=new n(t)}get segments(){return this.parsed.segments}get closed(){return this.parsed.closed}get linearPoints(){if(!this._linearPoints){const t=[];let i=[];for(const e of this.parsed.segments){const s=e.key.toLowerCase();("m"!==s&&"z"!==s||(i.length&&(t.push(i),i=[]),"z"!==s))&&e.point&&i.push(e.point)}i.length&&(t.push(i),i=[]),this._linearPoints=t}return this._linearPoints}get first(){return this._first}set first(t){this._first=t}setPosition(t,i){this._position=[t,i],this._first||(this._first=[t,i])}get position(){return this._position}get x(){return this._position[0]}get y(){return this._position[1]}}class a{constructor(t,i,e,s,n,r){if(this._segIndex=0,this._numSegs=0,this._rx=0,this._ry=0,this._sinPhi=0,this._cosPhi=0,this._C=[0,0],this._theta=0,this._delta=0,this._T=0,this._from=t,t[0]===i[0]&&t[1]===i[1])return;const a=Math.PI/180;this._rx=Math.abs(e[0]),this._ry=Math.abs(e[1]),this._sinPhi=Math.sin(s*a),this._cosPhi=Math.cos(s*a);const h=this._cosPhi*(t[0]-i[0])/2+this._sinPhi*(t[1]-i[1])/2,o=-this._sinPhi*(t[0]-i[0])/2+this._cosPhi*(t[1]-i[1])/2;let l=0;const c=this._rx*this._rx*this._ry*this._ry-this._rx*this._rx*o*o-this._ry*this._ry*h*h;if(c<0){const t=Math.sqrt(1-c/(this._rx*this._rx*this._ry*this._ry));this._rx=this._rx*t,this._ry=this._ry*t,l=0}else l=(n===r?-1:1)*Math.sqrt(c/(this._rx*this._rx*o*o+this._ry*this._ry*h*h));const u=l*this._rx*o/this._ry,f=-l*this._ry*h/this._rx;this._C=[0,0],this._C[0]=this._cosPhi*u-this._sinPhi*f+(t[0]+i[0])/2,this._C[1]=this._sinPhi*u+this._cosPhi*f+(t[1]+i[1])/2,this._theta=this.calculateVectorAngle(1,0,(h-u)/this._rx,(o-f)/this._ry);let d=this.calculateVectorAngle((h-u)/this._rx,(o-f)/this._ry,(-h-u)/this._rx,(-o-f)/this._ry);!r&&d>0?d-=2*Math.PI:r&&d<0&&(d+=2*Math.PI),this._numSegs=Math.ceil(Math.abs(d/(Math.PI/2))),this._delta=d/this._numSegs,this._T=8/3*Math.sin(this._delta/4)*Math.sin(this._delta/4)/Math.sin(this._delta/2)}getNextSegment(){if(this._segIndex===this._numSegs)return null;const t=Math.cos(this._theta),i=Math.sin(this._theta),e=this._theta+this._delta,s=Math.cos(e),n=Math.sin(e),r=[this._cosPhi*this._rx*s-this._sinPhi*this._ry*n+this._C[0],this._sinPhi*this._rx*s+this._cosPhi*this._ry*n+this._C[1]],a=[this._from[0]+this._T*(-this._cosPhi*this._rx*i-this._sinPhi*this._ry*t),this._from[1]+this._T*(-this._sinPhi*this._rx*i+this._cosPhi*this._ry*t)],h=[r[0]+this._T*(this._cosPhi*this._rx*n+this._sinPhi*this._ry*s),r[1]+this._T*(this._sinPhi*this._rx*n-this._cosPhi*this._ry*s)];return this._theta=e,this._from=[r[0],r[1]],this._segIndex++,{cp1:a,cp2:h,to:r}}calculateVectorAngle(t,i,e,s){const n=Math.atan2(i,t),r=Math.atan2(s,e);return r>=n?r-n:2*Math.PI-(n-r)}}class h{constructor(t,i){this.sets=t,this.closed=i}fit(t){const i=[];for(const s of this.sets){const e=s.length;let n=Math.floor(t*e);if(n<5){if(e<=5)continue;n=5}i.push(this.reduce(s,n))}let e="";for(const s of i){for(let t=0;t<s.length;t++){const i=s[t];e+=0===t?"M"+i[0]+","+i[1]:"L"+i[0]+","+i[1]}this.closed&&(e+="z ")}return e}distance(t,i){return Math.sqrt(Math.pow(t[0]-i[0],2)+Math.pow(t[1]-i[1],2))}reduce(t,i){if(t.length<=i)return t;const e=t.slice(0);for(;e.length>i;){let t=-1,i=-1;for(let s=1;s<e.length-1;s++){const n=this.distance(e[s-1],e[s]),r=this.distance(e[s],e[s+1]),a=this.distance(e[s-1],e[s+1]),h=(n+r+a)/2,o=Math.sqrt(h*(h-n)*(h-r)*(h-a));(t<0||o<t)&&(t=o,i=s)}if(!(i>0))break;e.splice(i,1)}return e}}class o{constructor(t,i){this.xi=Number.MAX_VALUE,this.yi=Number.MAX_VALUE,this.px1=t[0],this.py1=t[1],this.px2=i[0],this.py2=i[1],this.a=this.py2-this.py1,this.b=this.px1-this.px2,this.c=this.px2*this.py1-this.px1*this.py2,this._undefined=0===this.a&&0===this.b&&0===this.c}isUndefined(){return this._undefined}intersects(t){if(this.isUndefined()||t.isUndefined())return!1;let i=Number.MAX_VALUE,e=Number.MAX_VALUE,s=0,n=0;const r=this.a,a=this.b,h=this.c;return Math.abs(a)>1e-5&&(i=-r/a,s=-h/a),Math.abs(t.b)>1e-5&&(e=-t.a/t.b,n=-t.c/t.b),i===Number.MAX_VALUE?e===Number.MAX_VALUE?-h/r==-t.c/t.a&&(this.py1>=Math.min(t.py1,t.py2)&&this.py1<=Math.max(t.py1,t.py2)?(this.xi=this.px1,this.yi=this.py1,!0):this.py2>=Math.min(t.py1,t.py2)&&this.py2<=Math.max(t.py1,t.py2)&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=this.px1,this.yi=e*this.xi+n,!((this.py1-this.yi)*(this.yi-this.py2)<-1e-5||(t.py1-this.yi)*(this.yi-t.py2)<-1e-5||Math.abs(t.a)<1e-5&&(t.px1-this.xi)*(this.xi-t.px2)<-1e-5)):e===Number.MAX_VALUE?(this.xi=t.px1,this.yi=i*this.xi+s,!((t.py1-this.yi)*(this.yi-t.py2)<-1e-5||(this.py1-this.yi)*(this.yi-this.py2)<-1e-5||Math.abs(r)<1e-5&&(this.px1-this.xi)*(this.xi-this.px2)<-1e-5)):i===e?s===n&&(this.px1>=Math.min(t.px1,t.px2)&&this.px1<=Math.max(t.py1,t.py2)?(this.xi=this.px1,this.yi=this.py1,!0):this.px2>=Math.min(t.px1,t.px2)&&this.px2<=Math.max(t.px1,t.px2)&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=(n-s)/(i-e),this.yi=i*this.xi+s,!((this.px1-this.xi)*(this.xi-this.px2)<-1e-5||(t.px1-this.xi)*(this.xi-t.px2)<-1e-5))}}function l(t,i){const e=t[1][1]-t[0][1],s=t[0][0]-t[1][0],n=e*t[0][0]+s*t[0][1],r=i[1][1]-i[0][1],a=i[0][0]-i[1][0],h=r*i[0][0]+a*i[0][1],o=e*a-r*s;return o?[Math.round((a*n-s*h)/o),Math.round((e*h-r*n)/o)]:null}class c{constructor(t,i,e,s,n,r,a,h){this.deltaX=0,this.hGap=0,this.top=t,this.bottom=i,this.left=e,this.right=s,this.gap=n,this.sinAngle=r,this.tanAngle=h,Math.abs(r)<1e-4?this.pos=e+n:Math.abs(r)>.9999?this.pos=t+n:(this.deltaX=(i-t)*Math.abs(h),this.pos=e-Math.abs(this.deltaX),this.hGap=Math.abs(n/a),this.sLeft=new o([e,i],[e,t]),this.sRight=new o([s,i],[s,t]))}nextLine(){if(Math.abs(this.sinAngle)<1e-4){if(this.pos<this.right){const t=[this.pos,this.top,this.pos,this.bottom];return this.pos+=this.gap,t}}else if(Math.abs(this.sinAngle)>.9999){if(this.pos<this.bottom){const t=[this.left,this.pos,this.right,this.pos];return this.pos+=this.gap,t}}else{let t=this.pos-this.deltaX/2,i=this.pos+this.deltaX/2,e=this.bottom,s=this.top;if(this.pos<this.right+this.deltaX){for(;t<this.left&&i<this.left||t>this.right&&i>this.right;)if(this.pos+=this.hGap,t=this.pos-this.deltaX/2,i=this.pos+this.deltaX/2,this.pos>this.right+this.deltaX)return null;const n=new o([t,e],[i,s]);this.sLeft&&n.intersects(this.sLeft)&&(t=n.xi,e=n.yi),this.sRight&&n.intersects(this.sRight)&&(i=n.xi,s=n.yi),this.tanAngle>0&&(t=this.right-(t-this.left),i=this.right-(i-this.left));const r=[t,e,i,s];return this.pos+=this.hGap,r}}return null}}function u(t){const i=t[0],e=t[1];return Math.sqrt(Math.pow(i[0]-e[0],2)+Math.pow(i[1]-e[1],2))}function f(t,i){const e=[],s=new o([t[0],t[1]],[t[2],t[3]]);for(let n=0;n<i.length;n++){const t=new o(i[n],i[(n+1)%i.length]);s.intersects(t)&&e.push([s.xi,s.yi])}return e}function d(t,i,e,s,n,r,a){return[-e*r-s*n+e+r*t+n*i,a*(e*n-s*r)+s+-a*n*t+a*r*i]}function g(t,i){const e=[];if(t&&t.length){let s=t[0][0],n=t[0][0],r=t[0][1],a=t[0][1];for(let i=1;i<t.length;i++)s=Math.min(s,t[i][0]),n=Math.max(n,t[i][0]),r=Math.min(r,t[i][1]),a=Math.max(a,t[i][1]);const h=i.hachureAngle;let o=i.hachureGap;o<0&&(o=4*i.strokeWidth),o=Math.max(o,.1);const l=h%180*(Math.PI/180),u=Math.cos(l),d=Math.sin(l),g=Math.tan(l),p=new c(r-1,a+1,s-1,n+1,o,d,u,g);let m;for(;null!=(m=p.nextLine());){const i=f(m,t);for(let t=0;t<i.length;t++)if(t<i.length-1){const s=i[t],n=i[t+1];e.push([s,n])}}}return e}function p(t,i,e,s,n,r){const a=[];let h=Math.abs(s/2),o=Math.abs(n/2);h+=t.randOffset(.05*h,r),o+=t.randOffset(.05*o,r);const l=r.hachureAngle;let c=r.hachureGap;c<=0&&(c=4*r.strokeWidth);let u=r.fillWeight;u<0&&(u=r.strokeWidth/2);const f=l%180*(Math.PI/180),g=Math.tan(f),p=o/h,m=Math.sqrt(p*g*p*g+1),y=p*g/m,A=1/m,x=c/(h*o/Math.sqrt(o*A*(o*A)+h*y*(h*y))/h);let v=Math.sqrt(h*h-(i-h+x)*(i-h+x));for(let b=i-h+x;b<i+h;b+=x){const t=d(b,e-(v=Math.sqrt(h*h-(i-b)*(i-b))),i,e,y,A,p),s=d(b,e+v,i,e,y,A,p);a.push([t,s])}return a}class m{constructor(t){this.helper=t}fillPolygon(t,i){return this._fillPolygon(t,i)}fillEllipse(t,i,e,s,n){return this._fillEllipse(t,i,e,s,n)}fillArc(t,i,e,s,n,r,a){return null}_fillPolygon(t,i,e=!1){const s=g(t,i);return{type:"fillSketch",ops:this.renderLines(s,i,e)}}_fillEllipse(t,i,e,s,n,r=!1){const a=p(this.helper,t,i,e,s,n);return{type:"fillSketch",ops:this.renderLines(a,n,r)}}renderLines(t,i,e){let s=[],n=null;for(const r of t)s=s.concat(this.helper.doubleLineOps(r[0][0],r[0][1],r[1][0],r[1][1],i)),e&&n&&(s=s.concat(this.helper.doubleLineOps(n[0],n[1],r[0][0],r[0][1],i))),n=r[1];return s}}class y extends m{fillPolygon(t,i){return this._fillPolygon(t,i,!0)}fillEllipse(t,i,e,s,n){return this._fillEllipse(t,i,e,s,n,!0)}}class A extends m{fillPolygon(t,i){const e=this._fillPolygon(t,i),s=Object.assign({},i,{hachureAngle:i.hachureAngle+90}),n=this._fillPolygon(t,s);return e.ops=e.ops.concat(n.ops),e}fillEllipse(t,i,e,s,n){const r=this._fillEllipse(t,i,e,s,n),a=Object.assign({},n,{hachureAngle:n.hachureAngle+90}),h=this._fillEllipse(t,i,e,s,a);return r.ops=r.ops.concat(h.ops),r}}class x{constructor(t){this.helper=t}fillPolygon(t,i){const e=g(t,i=Object.assign({},i,{curveStepCount:4,hachureAngle:0}));return this.dotsOnLines(e,i)}fillEllipse(t,i,e,s,n){n=Object.assign({},n,{curveStepCount:4,hachureAngle:0});const r=p(this.helper,t,i,e,s,n);return this.dotsOnLines(r,n)}fillArc(t,i,e,s,n,r,a){return null}dotsOnLines(t,i){let e=[],s=i.hachureGap;s<0&&(s=4*i.strokeWidth),s=Math.max(s,.1);let n=i.fillWeight;n<0&&(n=i.strokeWidth/2);for(const r of t){const t=u(r)/s,a=Math.ceil(t)-1,h=Math.atan((r[1][1]-r[0][1])/(r[1][0]-r[0][0]));for(let o=0;o<a;o++){const t=s*(o+1),a=t*Math.sin(h),l=t*Math.cos(h),c=[r[0][0]-l,r[0][1]+a],u=this.helper.randOffsetWithRange(c[0]-s/4,c[0]+s/4,i),f=this.helper.randOffsetWithRange(c[1]-s/4,c[1]+s/4,i),d=this.helper.ellipse(u,f,n,n,i);e=e.concat(d.ops)}}return{type:"fillSketch",ops:e}}}class v{constructor(t){this.helper=t}fillPolygon(t,i){const e=[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER],s=[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER];t.forEach(t=>{e[0]=Math.min(e[0],t[0]),e[1]=Math.max(e[1],t[0]),s[0]=Math.min(s[0],t[1]),s[1]=Math.max(s[1],t[1])});const n=function(t){let i=0,e=0,s=0;for(let n=0;n<t.length;n++){const e=t[n],s=n===t.length-1?t[0]:t[n+1];i+=e[0]*s[1]-s[0]*e[1]}i/=2;for(let n=0;n<t.length;n++){const i=t[n],r=n===t.length-1?t[0]:t[n+1];e+=(i[0]+r[0])*(i[0]*r[1]-r[0]*i[1]),s+=(i[1]+r[1])*(i[0]*r[1]-r[0]*i[1])}return[e/(6*i),s/(6*i)]}(t),r=Math.max(Math.sqrt(Math.pow(n[0]-e[0],2)+Math.pow(n[1]-s[0],2)),Math.sqrt(Math.pow(n[0]-e[1],2)+Math.pow(n[1]-s[1],2))),a=i.hachureGap>0?i.hachureGap:4*i.strokeWidth,h=[];if(t.length>2)for(let l=0;l<t.length;l++)l===t.length-1?h.push([t[l],t[0]]):h.push([t[l],t[l+1]]);let o=[];const c=Math.max(1,Math.PI*r/a);for(let f=0;f<c;f++){const t=f*Math.PI/c,i=[n,[n[0]+r*Math.cos(t),n[1]+r*Math.sin(t)]];h.forEach(t=>{const n=l(t,i);n&&n[0]>=e[0]&&n[0]<=e[1]&&n[1]>=s[0]&&n[1]<=s[1]&&o.push(n)})}o=this.removeDuplocatePoints(o);const u=this.createLinesFromCenter(n,o);return{type:"fillSketch",ops:this.drawLines(u,i)}}fillEllipse(t,i,e,s,n){return this.fillArcSegment(t,i,e,s,0,2*Math.PI,n)}fillArc(t,i,e,s,n,r,a){return this.fillArcSegment(t,i,e,s,n,r,a)}fillArcSegment(t,i,e,s,n,r,a){const h=[t,i],o=e/2,l=s/2,c=Math.max(e/2,s/2);let u=a.hachureGap;u<0&&(u=4*a.strokeWidth);const f=Math.max(1,Math.abs(r-n)*c/u);let d=[];for(let p=0;p<f;p++){const t=p*((r-n)/f)+n,i=c*Math.cos(t),e=c*Math.sin(t),s=Math.sqrt(o*o*e*e+l*l*i*i),a=o*l*i/s,u=o*l*e/s;d.push([h[0]+a,h[1]+u])}d=this.removeDuplocatePoints(d);const g=this.createLinesFromCenter(h,d);return{type:"fillSketch",ops:this.drawLines(g,a)}}drawLines(t,i){let e=[];return t.forEach(t=>{const s=t[0],n=t[1];e=e.concat(this.helper.doubleLineOps(s[0],s[1],n[0],n[1],i))}),e}createLinesFromCenter(t,i){return i.map(i=>[t,i])}removeDuplocatePoints(t){const i=new Set;return t.filter(t=>{const e=t.join(",");return!i.has(e)&&(i.add(e),!0)})}}class b{constructor(t){this.helper=t}fillPolygon(t,i){const e=g(t,i);return{type:"fillSketch",ops:this.dashedLine(e,i)}}fillEllipse(t,i,e,s,n){const r=p(this.helper,t,i,e,s,n);return{type:"fillSketch",ops:this.dashedLine(r,n)}}fillArc(t,i,e,s,n,r,a){return null}dashedLine(t,i){const e=i.dashOffset<0?i.hachureGap<0?4*i.strokeWidth:i.hachureGap:i.dashOffset,s=i.dashGap<0?i.hachureGap<0?4*i.strokeWidth:i.hachureGap:i.dashGap;let n=[];return t.forEach(t=>{const r=u(t),a=Math.floor(r/(e+s)),h=(r+s-a*(e+s))/2;let o=t[0],l=t[1];o[0]>l[0]&&(o=t[1],l=t[0]);const c=Math.atan((l[1]-o[1])/(l[0]-o[0]));for(let u=0;u<a;u++){const t=u*(e+s),r=t+e,a=[o[0]+t*Math.cos(c)+h*Math.cos(c),o[1]+t*Math.sin(c)+h*Math.sin(c)],l=[o[0]+r*Math.cos(c)+h*Math.cos(c),o[1]+r*Math.sin(c)+h*Math.sin(c)];n=n.concat(this.helper.doubleLineOps(a[0],a[1],l[0],l[1],i))}}),n}}class w{constructor(t){this.helper=t}fillPolygon(t,i){const e=i.hachureGap<0?4*i.strokeWidth:i.hachureGap,s=i.zigzagOffset<0?e:i.zigzagOffset,n=g(t,i=Object.assign({},i,{hachureGap:e+s}));return{type:"fillSketch",ops:this.zigzagLines(n,s,i)}}fillEllipse(t,i,e,s,n){const r=n.hachureGap<0?4*n.strokeWidth:n.hachureGap,a=n.zigzagOffset<0?r:n.zigzagOffset;n=Object.assign({},n,{hachureGap:r+a});const h=p(this.helper,t,i,e,s,n);return{type:"fillSketch",ops:this.zigzagLines(h,a,n)}}fillArc(t,i,e,s,n,r,a){return null}zigzagLines(t,i,e){let s=[];return t.forEach(t=>{const n=u(t),r=Math.round(n/(2*i));let a=t[0],h=t[1];a[0]>h[0]&&(a=t[1],h=t[0]);const o=Math.atan((h[1]-a[1])/(h[0]-a[0]));for(let l=0;l<r;l++){const t=2*l*i,n=2*(l+1)*i,r=Math.sqrt(2*Math.pow(i,2)),h=[a[0]+t*Math.cos(o),a[1]+t*Math.sin(o)],c=[a[0]+n*Math.cos(o),a[1]+n*Math.sin(o)],u=[h[0]+r*Math.cos(o+Math.PI/4),h[1]+r*Math.sin(o+Math.PI/4)];s=(s=s.concat(this.helper.doubleLineOps(h[0],h[1],u[0],u[1],e))).concat(this.helper.doubleLineOps(u[0],u[1],c[0],c[1],e))}}),s}}const S={};function M(t,i){let e=t.fillStyle||"hachure";if(!S[e])switch(e){case"zigzag":S[e]||(S[e]=new y(i));break;case"cross-hatch":S[e]||(S[e]=new A(i));break;case"dots":S[e]||(S[e]=new x(i));break;case"starburst":S[e]||(S[e]=new v(i));break;case"dashed":S[e]||(S[e]=new b(i));break;case"zigzag-line":S[e]||(S[e]=new w(i));break;case"hachure":default:S[e="hachure"]||(S[e]=new m(i))}return S[e]}const k={randOffset:function(t,i){return L(t,i)},randOffsetWithRange:function(t,i,e){return E(t,i,e)},ellipse:R,doubleLineOps:function(t,i,e,s,n){return O(t,i,e,s,n)}};function P(t,i,e,s,n){return{type:"path",ops:O(t,i,e,s,n)}}function F(t,i,e){const s=(t||[]).length;if(s>2){let n=[];for(let i=0;i<s-1;i++)n=n.concat(O(t[i][0],t[i][1],t[i+1][0],t[i+1][1],e));return i&&(n=n.concat(O(t[s-1][0],t[s-1][1],t[0][0],t[0][1],e))),{type:"path",ops:n}}return 2===s?P(t[0][0],t[0][1],t[1][0],t[1][1],e):{type:"path",ops:[]}}function z(t,i){const e=G(t,1*(1+.2*i.roughness),i),s=G(t,1.5*(1+.22*i.roughness),i);return{type:"path",ops:e.concat(s)}}function R(t,i,e,s,n){const r=2*Math.PI/n.curveStepCount;let a=Math.abs(e/2),h=Math.abs(s/2);const o=Y(r,t,i,a+=L(.05*a,n),h+=L(.05*h,n),1,r*E(.1,E(.4,1,n),n),n),l=Y(r,t,i,a,h,1.5,0,n);return{type:"path",ops:o.concat(l)}}function C(t,i,e,s,n,r,a,h,o){const l=t,c=i;let u=Math.abs(e/2),f=Math.abs(s/2);u+=L(.01*u,o),f+=L(.01*f,o);let d=n,g=r;for(;d<0;)d+=2*Math.PI,g+=2*Math.PI;g-d>2*Math.PI&&(d=0,g=2*Math.PI);const p=2*Math.PI/o.curveStepCount,m=Math.min(p/2,(g-d)/2),y=Z(m,l,c,u,f,d,g,1,o),A=Z(m,l,c,u,f,d,g,1.5,o);let x=y.concat(A);return a&&(h?x=(x=x.concat(O(l,c,l+u*Math.cos(d),c+f*Math.sin(d),o))).concat(O(l,c,l+u*Math.cos(g),c+f*Math.sin(g),o)):(x.push({op:"lineTo",data:[l,c]}),x.push({op:"lineTo",data:[l+u*Math.cos(d),c+f*Math.sin(d)]}))),{type:"path",ops:x}}function T(t,i){const e=[];if(t.length){const s=i.maxRandomnessOffset||0,n=t.length;if(n>2){e.push({op:"move",data:[t[0][0]+L(s,i),t[0][1]+L(s,i)]});for(let r=1;r<n;r++)e.push({op:"lineTo",data:[t[r][0]+L(s,i),t[r][1]+L(s,i)]})}}return{type:"fillPath",ops:e}}function j(t,i){return M(i,k).fillPolygon(t,i)}function E(t,i,e){return e.roughness*(Math.random()*(i-t)+t)}function L(t,i){return E(-t,t,i)}function O(t,i,e,s,n){const r=I(t,i,e,s,n,!0,!1),a=I(t,i,e,s,n,!0,!0);return r.concat(a)}function I(t,i,e,s,n,r,a){const h=Math.pow(t-e,2)+Math.pow(i-s,2);let o=n.maxRandomnessOffset||0;o*o*100>h&&(o=Math.sqrt(h)/10);const l=o/2,c=.2+.2*Math.random();let u=n.bowing*n.maxRandomnessOffset*(s-i)/200,f=n.bowing*n.maxRandomnessOffset*(t-e)/200;u=L(u,n),f=L(f,n);const d=[],g=()=>L(l,n),p=()=>L(o,n);return r&&(a?d.push({op:"move",data:[t+g(),i+g()]}):d.push({op:"move",data:[t+L(o,n),i+L(o,n)]})),a?d.push({op:"bcurveTo",data:[u+t+(e-t)*c+g(),f+i+(s-i)*c+g(),u+t+2*(e-t)*c+g(),f+i+2*(s-i)*c+g(),e+g(),s+g()]}):d.push({op:"bcurveTo",data:[u+t+(e-t)*c+p(),f+i+(s-i)*c+p(),u+t+2*(e-t)*c+p(),f+i+2*(s-i)*c+p(),e+p(),s+p()]}),d}function G(t,i,e){const s=[];s.push([t[0][0]+L(i,e),t[0][1]+L(i,e)]),s.push([t[0][0]+L(i,e),t[0][1]+L(i,e)]);for(let n=1;n<t.length;n++)s.push([t[n][0]+L(i,e),t[n][1]+L(i,e)]),n===t.length-1&&s.push([t[n][0]+L(i,e),t[n][1]+L(i,e)]);return D(s,null,e)}function D(t,i,e){const s=t.length;let n=[];if(s>3){const r=[],a=1-e.curveTightness;n.push({op:"move",data:[t[1][0],t[1][1]]});for(let i=1;i+2<s;i++){const e=t[i];r[0]=[e[0],e[1]],r[1]=[e[0]+(a*t[i+1][0]-a*t[i-1][0])/6,e[1]+(a*t[i+1][1]-a*t[i-1][1])/6],r[2]=[t[i+1][0]+(a*t[i][0]-a*t[i+2][0])/6,t[i+1][1]+(a*t[i][1]-a*t[i+2][1])/6],r[3]=[t[i+1][0],t[i+1][1]],n.push({op:"bcurveTo",data:[r[1][0],r[1][1],r[2][0],r[2][1],r[3][0],r[3][1]]})}if(i&&2===i.length){const t=e.maxRandomnessOffset;n.push({op:"lineTo",data:[i[0]+L(t,e),i[1]+L(t,e)]})}}else 3===s?(n.push({op:"move",data:[t[1][0],t[1][1]]}),n.push({op:"bcurveTo",data:[t[1][0],t[1][1],t[2][0],t[2][1],t[2][0],t[2][1]]})):2===s&&(n=n.concat(O(t[0][0],t[0][1],t[1][0],t[1][1],e)));return n}function Y(t,i,e,s,n,r,a,h){const o=L(.5,h)-Math.PI/2,l=[];l.push([L(r,h)+i+.9*s*Math.cos(o-t),L(r,h)+e+.9*n*Math.sin(o-t)]);for(let c=o;c<2*Math.PI+o-.01;c+=t)l.push([L(r,h)+i+s*Math.cos(c),L(r,h)+e+n*Math.sin(c)]);return l.push([L(r,h)+i+s*Math.cos(o+2*Math.PI+.5*a),L(r,h)+e+n*Math.sin(o+2*Math.PI+.5*a)]),l.push([L(r,h)+i+.98*s*Math.cos(o+a),L(r,h)+e+.98*n*Math.sin(o+a)]),l.push([L(r,h)+i+.9*s*Math.cos(o+.5*a),L(r,h)+e+.9*n*Math.sin(o+.5*a)]),D(l,null,h)}function Z(t,i,e,s,n,r,a,h,o){const l=r+L(.1,o),c=[];c.push([L(h,o)+i+.9*s*Math.cos(l-t),L(h,o)+e+.9*n*Math.sin(l-t)]);for(let u=l;u<=a;u+=t)c.push([L(h,o)+i+s*Math.cos(u),L(h,o)+e+n*Math.sin(u)]);return c.push([i+s*Math.cos(a),e+n*Math.sin(a)]),c.push([i+s*Math.cos(a),e+n*Math.sin(a)]),D(c,null,o)}function B(t,i,e,s,n,r,a,h){const o=[],l=[h.maxRandomnessOffset||1,(h.maxRandomnessOffset||1)+.5];let c=[0,0];for(let u=0;u<2;u++)0===u?o.push({op:"move",data:[a.x,a.y]}):o.push({op:"move",data:[a.x+L(l[0],h),a.y+L(l[0],h)]}),c=[n+L(l[u],h),r+L(l[u],h)],o.push({op:"bcurveTo",data:[t+L(l[u],h),i+L(l[u],h),e+L(l[u],h),s+L(l[u],h),c[0],c[1]]});return a.setPosition(c[0],c[1]),o}function W(t,i,e,s){let n=[];switch(i.key){case"M":case"m":{const e="m"===i.key;if(i.data.length>=2){let r=+i.data[0],a=+i.data[1];e&&(r+=t.x,a+=t.y);const h=1*(s.maxRandomnessOffset||0);r+=L(h,s),a+=L(h,s),t.setPosition(r,a),n.push({op:"move",data:[r,a]})}break}case"L":case"l":{const e="l"===i.key;if(i.data.length>=2){let r=+i.data[0],a=+i.data[1];e&&(r+=t.x,a+=t.y),n=n.concat(O(t.x,t.y,r,a,s)),t.setPosition(r,a)}break}case"H":case"h":{const e="h"===i.key;if(i.data.length){let r=+i.data[0];e&&(r+=t.x),n=n.concat(O(t.x,t.y,r,t.y,s)),t.setPosition(r,t.y)}break}case"V":case"v":{const e="v"===i.key;if(i.data.length){let r=+i.data[0];e&&(r+=t.y),n=n.concat(O(t.x,t.y,t.x,r,s)),t.setPosition(t.x,r)}break}case"Z":case"z":t.first&&(n=n.concat(O(t.x,t.y,t.first[0],t.first[1],s)),t.setPosition(t.first[0],t.first[1]),t.first=null);break;case"C":case"c":{const e="c"===i.key;if(i.data.length>=6){let r=+i.data[0],a=+i.data[1],h=+i.data[2],o=+i.data[3],l=+i.data[4],c=+i.data[5];e&&(r+=t.x,h+=t.x,l+=t.x,a+=t.y,o+=t.y,c+=t.y);const u=B(r,a,h,o,l,c,t,s);n=n.concat(u),t.bezierReflectionPoint=[l+(l-h),c+(c-o)]}break}case"S":case"s":{const r="s"===i.key;if(i.data.length>=4){let a=+i.data[0],h=+i.data[1],o=+i.data[2],l=+i.data[3];r&&(a+=t.x,o+=t.x,h+=t.y,l+=t.y);let c=a,u=h;const f=e?e.key:"";let d=null;"c"!==f&&"C"!==f&&"s"!==f&&"S"!==f||(d=t.bezierReflectionPoint),d&&(c=d[0],u=d[1]);const g=B(c,u,a,h,o,l,t,s);n=n.concat(g),t.bezierReflectionPoint=[o+(o-a),l+(l-h)]}break}case"Q":case"q":{const e="q"===i.key;if(i.data.length>=4){let r=+i.data[0],a=+i.data[1],h=+i.data[2],o=+i.data[3];e&&(r+=t.x,h+=t.x,a+=t.y,o+=t.y);const l=1*(1+.2*s.roughness),c=1.5*(1+.22*s.roughness);n.push({op:"move",data:[t.x+L(l,s),t.y+L(l,s)]});let u=[h+L(l,s),o+L(l,s)];n.push({op:"qcurveTo",data:[r+L(l,s),a+L(l,s),u[0],u[1]]}),n.push({op:"move",data:[t.x+L(c,s),t.y+L(c,s)]}),u=[h+L(c,s),o+L(c,s)],n.push({op:"qcurveTo",data:[r+L(c,s),a+L(c,s),u[0],u[1]]}),t.setPosition(u[0],u[1]),t.quadReflectionPoint=[h+(h-r),o+(o-a)]}break}case"T":case"t":{const r="t"===i.key;if(i.data.length>=2){let a=+i.data[0],h=+i.data[1];r&&(a+=t.x,h+=t.y);let o=a,l=h;const c=e?e.key:"";let u=null;"q"!==c&&"Q"!==c&&"t"!==c&&"T"!==c||(u=t.quadReflectionPoint),u&&(o=u[0],l=u[1]);const f=1*(1+.2*s.roughness),d=1.5*(1+.22*s.roughness);n.push({op:"move",data:[t.x+L(f,s),t.y+L(f,s)]});let g=[a+L(f,s),h+L(f,s)];n.push({op:"qcurveTo",data:[o+L(f,s),l+L(f,s),g[0],g[1]]}),n.push({op:"move",data:[t.x+L(d,s),t.y+L(d,s)]}),g=[a+L(d,s),h+L(d,s)],n.push({op:"qcurveTo",data:[o+L(d,s),l+L(d,s),g[0],g[1]]}),t.setPosition(g[0],g[1]),t.quadReflectionPoint=[a+(a-o),h+(h-l)]}break}case"A":case"a":{const e="a"===i.key;if(i.data.length>=7){const r=+i.data[0],h=+i.data[1],o=+i.data[2],l=+i.data[3],c=+i.data[4];let u=+i.data[5],f=+i.data[6];if(e&&(u+=t.x,f+=t.y),u===t.x&&f===t.y)break;if(0===r||0===h)n=n.concat(O(t.x,t.y,u,f,s)),t.setPosition(u,f);else for(let i=0;i<1;i++){const i=new a([t.x,t.y],[u,f],[r,h],o,!!l,!!c);let e=i.getNextSegment();for(;e;){const r=B(e.cp1[0],e.cp1[1],e.cp2[0],e.cp2[1],e.to[0],e.to[1],t,s);n=n.concat(r),e=i.getNextSegment()}}}break}}return n}class q extends i{line(t,i,e,s,n){const r=this._options(n);return this._drawable("line",[P(t,i,e,s,r)],r)}rectangle(t,i,e,s,n){const r=this._options(n),a=[];if(r.fill){const n=[[t,i],[t+e,i],[t+e,i+s],[t,i+s]];"solid"===r.fillStyle?a.push(T(n,r)):a.push(j(n,r))}return a.push(function(t,i,e,s,n){return function(t,i){return F(t,!0,n)}([[t,i],[t+e,i],[t+e,i+s],[t,i+s]])}(t,i,e,s,r)),this._drawable("rectangle",a,r)}ellipse(t,i,e,s,n){const r=this._options(n),a=[];if(r.fill)if("solid"===r.fillStyle){const n=R(t,i,e,s,r);n.type="fillPath",a.push(n)}else a.push(function(t,i,e,s,n){return M(n,k).fillEllipse(t,i,e,s,n)}(t,i,e,s,r));return a.push(R(t,i,e,s,r)),this._drawable("ellipse",a,r)}circle(t,i,e,s){const n=this.ellipse(t,i,e,e,s);return n.shape="circle",n}linearPath(t,i){const e=this._options(i);return this._drawable("linearPath",[F(t,!1,e)],e)}arc(t,i,e,s,n,r,a=!1,h){const o=this._options(h),l=[];if(a&&o.fill)if("solid"===o.fillStyle){const a=C(t,i,e,s,n,r,!0,!1,o);a.type="fillPath",l.push(a)}else l.push(function(t,i,e,s,n,r,a){const h=M(a,k).fillArc(t,i,e,s,n,r,a);if(h)return h;const o=t,l=i;let c=Math.abs(e/2),u=Math.abs(s/2);c+=L(.01*c,a),u+=L(.01*u,a);let f=n,d=r;for(;f<0;)f+=2*Math.PI,d+=2*Math.PI;d-f>2*Math.PI&&(f=0,d=2*Math.PI);const g=(d-f)/a.curveStepCount,p=[];for(let m=f;m<=d;m+=g)p.push([o+c*Math.cos(m),l+u*Math.sin(m)]);return p.push([o+c*Math.cos(d),l+u*Math.sin(d)]),p.push([o,l]),j(p,a)}(t,i,e,s,n,r,o));return l.push(C(t,i,e,s,n,r,a,!0,o)),this._drawable("arc",l,o)}curve(t,i){const e=this._options(i);return this._drawable("curve",[z(t,e)],e)}polygon(t,i){const e=this._options(i),s=[];if(e.fill)if("solid"===e.fillStyle)s.push(T(t,e));else{const i=this.computePolygonSize(t),n=j([[0,0],[i[0],0],[i[0],i[1]],[0,i[1]]],e);n.type="path2Dpattern",n.size=i,n.path=this.polygonPath(t),s.push(n)}return s.push(F(t,!0,e)),this._drawable("polygon",s,e)}path(t,i){const e=this._options(i),s=[];if(!t)return this._drawable("path",s,e);if(e.fill)if("solid"===e.fillStyle){const i={type:"path2Dfill",path:t,ops:[]};s.push(i)}else{const i=this.computePathSize(t),n=j([[0,0],[i[0],0],[i[0],i[1]],[0,i[1]]],e);n.type="path2Dpattern",n.size=i,n.path=t,s.push(n)}return s.push(function(t,i){t=(t||"").replace(/\n/g," ").replace(/(-\s)/g,"-").replace("/(ss)/g"," ");let e=new r(t);if(i.simplification){const t=new h(e.linearPoints,e.closed).fit(i.simplification);e=new r(t)}let s=[];const n=e.segments||[];for(let r=0;r<n.length;r++){const t=W(e,n[r],r>0?n[r-1]:null,i);t&&t.length&&(s=s.concat(t))}return{type:"path",ops:s}}(t,e)),this._drawable("path",s,e)}}const N="undefined"!=typeof document;class V{constructor(t){this.canvas=t,this.ctx=this.canvas.getContext("2d")}draw(t){const i=t.sets||[],e=t.options||this.getDefaultOptions(),s=this.ctx;for(const n of i)switch(n.type){case"path":s.save(),s.strokeStyle=e.stroke,s.lineWidth=e.strokeWidth,this._drawToContext(s,n),s.restore();break;case"fillPath":s.save(),s.fillStyle=e.fill||"",this._drawToContext(s,n),s.restore();break;case"fillSketch":this.fillSketch(s,n,e);break;case"path2Dfill":{this.ctx.save(),this.ctx.fillStyle=e.fill||"";const t=new Path2D(n.path);this.ctx.fill(t),this.ctx.restore();break}case"path2Dpattern":{const t=this.canvas.ownerDocument||N&&document;if(t){const i=n.size,s=t.createElement("canvas"),r=s.getContext("2d"),a=this.computeBBox(n.path);a&&(a.width||a.height)?(s.width=this.canvas.width,s.height=this.canvas.height,r.translate(a.x||0,a.y||0)):(s.width=i[0],s.height=i[1]),this.fillSketch(r,n,e),this.ctx.save(),this.ctx.fillStyle=this.ctx.createPattern(s,"repeat");const h=new Path2D(n.path);this.ctx.fill(h),this.ctx.restore()}else console.error("Cannot render path2Dpattern. No defs/document defined.");break}}}computeBBox(t){if(N)try{const i="http://www.w3.org/2000/svg",e=document.createElementNS(i,"svg");e.setAttribute("width","0"),e.setAttribute("height","0");const s=self.document.createElementNS(i,"path");s.setAttribute("d",t),e.appendChild(s),document.body.appendChild(e);const n=s.getBBox();return document.body.removeChild(e),n}catch(t){}return null}fillSketch(t,i,e){let s=e.fillWeight;s<0&&(s=e.strokeWidth/2),t.save(),t.strokeStyle=e.fill||"",t.lineWidth=s,this._drawToContext(t,i),t.restore()}_drawToContext(t,i){t.beginPath();for(const e of i.ops){const i=e.data;switch(e.op){case"move":t.moveTo(i[0],i[1]);break;case"bcurveTo":t.bezierCurveTo(i[0],i[1],i[2],i[3],i[4],i[5]);break;case"qcurveTo":t.quadraticCurveTo(i[0],i[1],i[2],i[3]);break;case"lineTo":t.lineTo(i[0],i[1])}}"fillPath"===i.type?t.fill():t.stroke()}}class H extends V{constructor(t,i){super(t),this.gen=new q(i||null,this.canvas)}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}line(t,i,e,s,n){const r=this.gen.line(t,i,e,s,n);return this.draw(r),r}rectangle(t,i,e,s,n){const r=this.gen.rectangle(t,i,e,s,n);return this.draw(r),r}ellipse(t,i,e,s,n){const r=this.gen.ellipse(t,i,e,s,n);return this.draw(r),r}circle(t,i,e,s){const n=this.gen.circle(t,i,e,s);return this.draw(n),n}linearPath(t,i){const e=this.gen.linearPath(t,i);return this.draw(e),e}polygon(t,i){const e=this.gen.polygon(t,i);return this.draw(e),e}arc(t,i,e,s,n,r,a=!1,h){const o=this.gen.arc(t,i,e,s,n,r,a,h);return this.draw(o),o}curve(t,i){const e=this.gen.curve(t,i);return this.draw(e),e}path(t,i){const e=this.gen.path(t,i);return this.draw(e),e}}const X="undefined"!=typeof document;class U{constructor(t){this.svg=t}get defs(){const t=this.svg.ownerDocument||X&&document;if(t&&!this._defs){const i=t.createElementNS("http://www.w3.org/2000/svg","defs");this.svg.firstChild?this.svg.insertBefore(i,this.svg.firstChild):this.svg.appendChild(i),this._defs=i}return this._defs||null}draw(t){const i=t.sets||[],e=t.options||this.getDefaultOptions(),s=this.svg.ownerDocument||window.document,n=s.createElementNS("http://www.w3.org/2000/svg","g");for(const r of i){let t=null;switch(r.type){case"path":(t=s.createElementNS("http://www.w3.org/2000/svg","path")).setAttribute("d",this.opsToPath(r)),t.style.stroke=e.stroke,t.style.strokeWidth=e.strokeWidth+"",t.style.fill="none";break;case"fillPath":(t=s.createElementNS("http://www.w3.org/2000/svg","path")).setAttribute("d",this.opsToPath(r)),t.style.stroke="none",t.style.strokeWidth="0",t.style.fill=e.fill||null;break;case"fillSketch":t=this.fillSketch(s,r,e);break;case"path2Dfill":(t=s.createElementNS("http://www.w3.org/2000/svg","path")).setAttribute("d",r.path||""),t.style.stroke="none",t.style.strokeWidth="0",t.style.fill=e.fill||null;break;case"path2Dpattern":if(this.defs){const i=r.size,n=s.createElementNS("http://www.w3.org/2000/svg","pattern"),a=`rough-${Math.floor(Math.random()*(Number.MAX_SAFE_INTEGER||999999))}`;n.setAttribute("id",a),n.setAttribute("x","0"),n.setAttribute("y","0"),n.setAttribute("width","1"),n.setAttribute("height","1"),n.setAttribute("height","1"),n.setAttribute("viewBox",`0 0 ${Math.round(i[0])} ${Math.round(i[1])}`),n.setAttribute("patternUnits","objectBoundingBox");const h=this.fillSketch(s,r,e);n.appendChild(h),this.defs.appendChild(n),(t=s.createElementNS("http://www.w3.org/2000/svg","path")).setAttribute("d",r.path||""),t.style.stroke="none",t.style.strokeWidth="0",t.style.fill=`url(#${a})`}else console.error("Cannot render path2Dpattern. No defs/document defined.")}t&&n.appendChild(t)}return n}fillSketch(t,i,e){let s=e.fillWeight;s<0&&(s=e.strokeWidth/2);const n=t.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d",this.opsToPath(i)),n.style.stroke=e.fill||null,n.style.strokeWidth=s+"",n.style.fill="none",n}}class K extends U{constructor(t,i){super(t),this.gen=new q(i||null,this.svg)}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}opsToPath(t){return this.gen.opsToPath(t)}line(t,i,e,s,n){const r=this.gen.line(t,i,e,s,n);return this.draw(r)}rectangle(t,i,e,s,n){const r=this.gen.rectangle(t,i,e,s,n);return this.draw(r)}ellipse(t,i,e,s,n){const r=this.gen.ellipse(t,i,e,s,n);return this.draw(r)}circle(t,i,e,s){const n=this.gen.circle(t,i,e,s);return this.draw(n)}linearPath(t,i){const e=this.gen.linearPath(t,i);return this.draw(e)}polygon(t,i){const e=this.gen.polygon(t,i);return this.draw(e)}arc(t,i,e,s,n,r,a=!1,h){const o=this.gen.arc(t,i,e,s,n,r,a,h);return this.draw(o)}curve(t,i){const e=this.gen.curve(t,i);return this.draw(e)}path(t,i){const e=this.gen.path(t,i);return this.draw(e)}}return{canvas:(t,i)=>new H(t,i),svg:(t,i)=>new K(t,i),generator:(t,i)=>new q(t,i)}});const On=t=>t>20?20:t;const In=t=>t>20?20:t;function Gn(t){return t.innerRadius}function Dn(t){return t.outerRadius}function Yn(t){return t.startAngle}function Zn(t){return t.endAngle}function Bn(t){return t&&t.padAngle}function Wn(t,i,e,s,n,r,a){var h=t-e,o=i-s,l=(a?r:-r)/er(h*h+o*o),c=l*o,u=-l*h,f=t+c,d=i+u,g=e+c,p=s+u,m=(f+g)/2,y=(d+p)/2,A=g-f,x=p-d,v=A*A+x*x,b=n-r,w=f*p-g*d,S=(x<0?-1:1)*er($n(0,b*b*v-w*w)),M=(w*x-A*S)/v,k=(-w*A-x*S)/v,P=(w*x+A*S)/v,F=(-w*A+x*S)/v,z=M-m,R=k-y,C=P-m,T=F-y;return z*z+R*R>C*C+T*T&&(M=P,k=F),{cx:M,cy:k,x01:-c,y01:-u,x11:M*(n/b-1),y11:k*(n/b-1)}}var qn=Math.PI,Nn=2*qn,Vn=1e-6,Hn=Nn-Vn;function Xn(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Un(){return new Xn}Xn.prototype=Un.prototype={constructor:Xn,moveTo:function(t,i){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+i)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,i){this._+="L"+(this._x1=+t)+","+(this._y1=+i)},quadraticCurveTo:function(t,i,e,s){this._+="Q"+ +t+","+ +i+","+(this._x1=+e)+","+(this._y1=+s)},bezierCurveTo:function(t,i,e,s,n,r){this._+="C"+ +t+","+ +i+","+ +e+","+ +s+","+(this._x1=+n)+","+(this._y1=+r)},arcTo:function(t,i,e,s,n){t=+t,i=+i,e=+e,s=+s,n=+n;var r=this._x1,a=this._y1,h=e-t,o=s-i,l=r-t,c=a-i,u=l*l+c*c;if(n<0)throw new Error("negative radius: "+n);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=i);else if(u>Vn)if(Math.abs(c*h-o*l)>Vn&&n){var f=e-r,d=s-a,g=h*h+o*o,p=f*f+d*d,m=Math.sqrt(g),y=Math.sqrt(u),A=n*Math.tan((qn-Math.acos((g+u-p)/(2*m*y)))/2),x=A/y,v=A/m;Math.abs(x-1)>Vn&&(this._+="L"+(t+x*l)+","+(i+x*c)),this._+="A"+n+","+n+",0,0,"+ +(c*f>l*d)+","+(this._x1=t+v*h)+","+(this._y1=i+v*o)}else this._+="L"+(this._x1=t)+","+(this._y1=i)},arc:function(t,i,e,s,n,r){t=+t,i=+i,r=!!r;var a=(e=+e)*Math.cos(s),h=e*Math.sin(s),o=t+a,l=i+h,c=1^r,u=r?s-n:n-s;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+o+","+l:(Math.abs(this._x1-o)>Vn||Math.abs(this._y1-l)>Vn)&&(this._+="L"+o+","+l),e&&(u<0&&(u=u%Nn+Nn),u>Hn?this._+="A"+e+","+e+",0,1,"+c+","+(t-a)+","+(i-h)+"A"+e+","+e+",0,1,"+c+","+(this._x1=o)+","+(this._y1=l):u>Vn&&(this._+="A"+e+","+e+",0,"+ +(u>=qn)+","+c+","+(this._x1=t+e*Math.cos(n))+","+(this._y1=i+e*Math.sin(n))))},rect:function(t,i,e,s){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+i)+"h"+ +e+"v"+ +s+"h"+-e+"Z"},toString:function(){return this._}};var Kn=function(t){return function(){return t}},Qn=Math.abs,Jn=Math.atan2,_n=Math.cos,$n=Math.max,tr=Math.min,ir=Math.sin,er=Math.sqrt,sr=1e-12,nr=Math.PI,rr=nr/2,ar=2*nr;function hr(t){return t>=1?rr:t<=-1?-rr:Math.asin(t)}var or=function(){var t=Gn,i=Dn,e=Kn(0),s=null,n=Yn,r=Zn,a=Bn,h=null;function o(){var o,l,c=+t.apply(this,arguments),u=+i.apply(this,arguments),f=n.apply(this,arguments)-rr,d=r.apply(this,arguments)-rr,g=Qn(d-f),p=d>f;if(h||(h=o=Un()),u<c&&(l=u,u=c,c=l),u>sr)if(g>ar-sr)h.moveTo(u*_n(f),u*ir(f)),h.arc(0,0,u,f,d,!p),c>sr&&(h.moveTo(c*_n(d),c*ir(d)),h.arc(0,0,c,d,f,p));else{var m,y,A=f,x=d,v=f,b=d,w=g,S=g,M=a.apply(this,arguments)/2,k=M>sr&&(s?+s.apply(this,arguments):er(c*c+u*u)),P=tr(Qn(u-c)/2,+e.apply(this,arguments)),F=P,z=P;if(k>sr){var R=hr(k/c*ir(M)),C=hr(k/u*ir(M));(w-=2*R)>sr?(v+=R*=p?1:-1,b-=R):(w=0,v=b=(f+d)/2),(S-=2*C)>sr?(A+=C*=p?1:-1,x-=C):(S=0,A=x=(f+d)/2)}var T=u*_n(A),j=u*ir(A),E=c*_n(b),L=c*ir(b);if(P>sr){var O,I=u*_n(x),G=u*ir(x),D=c*_n(v),Y=c*ir(v);if(g<nr&&(O=function(t,i,e,s,n,r,a,h){var o=e-t,l=s-i,c=a-n,u=h-r,f=u*o-c*l;if(!(f*f<sr))return[t+(f=(c*(i-r)-u*(t-n))/f)*o,i+f*l]}(T,j,D,Y,I,G,E,L))){var Z=T-O[0],B=j-O[1],W=I-O[0],q=G-O[1],N=1/ir(function(t){return t>1?0:t<-1?nr:Math.acos(t)}((Z*W+B*q)/(er(Z*Z+B*B)*er(W*W+q*q)))/2),V=er(O[0]*O[0]+O[1]*O[1]);F=tr(P,(c-V)/(N-1)),z=tr(P,(u-V)/(N+1))}}S>sr?z>sr?(m=Wn(D,Y,T,j,u,z,p),y=Wn(I,G,E,L,u,z,p),h.moveTo(m.cx+m.x01,m.cy+m.y01),z<P?h.arc(m.cx,m.cy,z,Jn(m.y01,m.x01),Jn(y.y01,y.x01),!p):(h.arc(m.cx,m.cy,z,Jn(m.y01,m.x01),Jn(m.y11,m.x11),!p),h.arc(0,0,u,Jn(m.cy+m.y11,m.cx+m.x11),Jn(y.cy+y.y11,y.cx+y.x11),!p),h.arc(y.cx,y.cy,z,Jn(y.y11,y.x11),Jn(y.y01,y.x01),!p))):(h.moveTo(T,j),h.arc(0,0,u,A,x,!p)):h.moveTo(T,j),c>sr&&w>sr?F>sr?(m=Wn(E,L,I,G,c,-F,p),y=Wn(T,j,D,Y,c,-F,p),h.lineTo(m.cx+m.x01,m.cy+m.y01),F<P?h.arc(m.cx,m.cy,F,Jn(m.y01,m.x01),Jn(y.y01,y.x01),!p):(h.arc(m.cx,m.cy,F,Jn(m.y01,m.x01),Jn(m.y11,m.x11),!p),h.arc(0,0,c,Jn(m.cy+m.y11,m.cx+m.x11),Jn(y.cy+y.y11,y.cx+y.x11),p),h.arc(y.cx,y.cy,F,Jn(y.y11,y.x11),Jn(y.y01,y.x01),!p))):h.arc(0,0,c,b,v,p):h.lineTo(E,L)}else h.moveTo(0,0);if(h.closePath(),o)return h=null,o+""||null}return o.centroid=function(){var e=(+t.apply(this,arguments)+ +i.apply(this,arguments))/2,s=(+n.apply(this,arguments)+ +r.apply(this,arguments))/2-nr/2;return[_n(s)*e,ir(s)*e]},o.innerRadius=function(i){return arguments.length?(t="function"==typeof i?i:Kn(+i),o):t},o.outerRadius=function(t){return arguments.length?(i="function"==typeof t?t:Kn(+t),o):i},o.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:Kn(+t),o):e},o.padRadius=function(t){return arguments.length?(s=null==t?null:"function"==typeof t?t:Kn(+t),o):s},o.startAngle=function(t){return arguments.length?(n="function"==typeof t?t:Kn(+t),o):n},o.endAngle=function(t){return arguments.length?(r="function"==typeof t?t:Kn(+t),o):r},o.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:Kn(+t),o):a},o.context=function(t){return arguments.length?(h=null==t?null:t,o):h},o};function lr(t){this._context=t}lr.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;default:this._context.lineTo(t,i)}}};var cr=function(t){return new lr(t)};function ur(t){return t[0]}function fr(t){return t[1]}var dr=function(){var t=ur,i=fr,e=Kn(!0),s=null,n=cr,r=null;function a(a){var h,o,l,c=a.length,u=!1;for(null==s&&(r=n(l=Un())),h=0;h<=c;++h)!(h<c&&e(o=a[h],h,a))===u&&((u=!u)?r.lineStart():r.lineEnd()),u&&r.point(+t(o,h,a),+i(o,h,a));if(l)return r=null,l+""||null}return a.x=function(i){return arguments.length?(t="function"==typeof i?i:Kn(+i),a):t},a.y=function(t){return arguments.length?(i="function"==typeof t?t:Kn(+t),a):i},a.defined=function(t){return arguments.length?(e="function"==typeof t?t:Kn(!!t),a):e},a.curve=function(t){return arguments.length?(n=t,null!=s&&(r=n(s)),a):n},a.context=function(t){return arguments.length?(null==t?s=r=null:r=n(s=t),a):s},a},gr=function(t,i){return i<t?-1:i>t?1:i>=t?0:NaN},pr=function(t){return t},mr=function(){var t=pr,i=gr,e=null,s=Kn(0),n=Kn(ar),r=Kn(0);function a(a){var h,o,l,c,u,f=a.length,d=0,g=new Array(f),p=new Array(f),m=+s.apply(this,arguments),y=Math.min(ar,Math.max(-ar,n.apply(this,arguments)-m)),A=Math.min(Math.abs(y)/f,r.apply(this,arguments)),x=A*(y<0?-1:1);for(h=0;h<f;++h)(u=p[g[h]=h]=+t(a[h],h,a))>0&&(d+=u);for(null!=i?g.sort(function(t,e){return i(p[t],p[e])}):null!=e&&g.sort(function(t,i){return e(a[t],a[i])}),h=0,l=d?(y-f*x)/d:0;h<f;++h,m=c)o=g[h],c=m+((u=p[o])>0?u*l:0)+x,p[o]={data:a[o],index:h,value:u,startAngle:m,endAngle:c,padAngle:A};return p}return a.value=function(i){return arguments.length?(t="function"==typeof i?i:Kn(+i),a):t},a.sortValues=function(t){return arguments.length?(i=t,e=null,a):i},a.sort=function(t){return arguments.length?(e=t,i=null,a):e},a.startAngle=function(t){return arguments.length?(s="function"==typeof t?t:Kn(+t),a):s},a.endAngle=function(t){return arguments.length?(n="function"==typeof t?t:Kn(+t),a):n},a.padAngle=function(t){return arguments.length?(r="function"==typeof t?t:Kn(+t),a):r},a};!function(t){function i(i){return new yr(t(i))}i._curve=t}(cr);function yr(t){this._curve=t}yr.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,i){this._curve.point(i*Math.sin(t),i*-Math.cos(t))}};Array.prototype.slice,Math.sqrt(1/3);var Ar=Math.sin(nr/10)/Math.sin(7*nr/10);Math.sin(ar/10),Math.cos(ar/10),Math.sqrt(3),Math.sqrt(3),Math.sqrt(12);var xr=function(){};function vr(t,i,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+i)/6,(t._y0+4*t._y1+e)/6)}function br(t){this._context=t}function wr(t,i){this._basis=new br(t),this._beta=i}br.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:vr(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:vr(this,t,i)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=i}},wr.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,i=this._y,e=t.length-1;if(e>0)for(var s,n=t[0],r=i[0],a=t[e]-n,h=i[e]-r,o=-1;++o<=e;)s=o/e,this._basis.point(this._beta*t[o]+(1-this._beta)*(n+s*a),this._beta*i[o]+(1-this._beta)*(r+s*h));this._x=this._y=null,this._basis.lineEnd()},point:function(t,i){this._x.push(+t),this._y.push(+i)}};(function t(i){function e(t){return 1===i?new br(t):new wr(t,i)}return e.beta=function(i){return t(+i)},e})(.85);function Sr(t,i){this._context=t,this._k=(1-i)/6}function Mr(t,i,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-i),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function kr(t,i){this._context=t,this._k=(1-i)/6}kr.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Mr(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2,this._x1=t,this._y1=i;break;case 2:this._point=3;default:Mr(this,t,i)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};(function t(i){function e(t){return new kr(t,i)}return e.tension=function(i){return t(+i)},e})(0);Sr.prototype={areaStart:xr,areaEnd:xr,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1,this._x3=t,this._y3=i;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=i);break;case 2:this._point=3,this._x5=t,this._y5=i;break;default:Mr(this,t,i)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};(function t(i){function e(t){return new Sr(t,i)}return e.tension=function(i){return t(+i)},e})(0);function Pr(t,i){this._context=t,this._k=(1-i)/6}Pr.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){switch(t=+t,i=+i,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Mr(this,t,i)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};(function t(i){function e(t){return new Pr(t,i)}return e.tension=function(i){return t(+i)},e})(0);function Fr(t,i){this._context=t,this._alpha=i}function zr(t,i,e){var s=t._x1,n=t._y1,r=t._x2,a=t._y2;if(t._l01_a>sr){var h=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,o=3*t._l01_a*(t._l01_a+t._l12_a);s=(s*h-t._x0*t._l12_2a+t._x2*t._l01_2a)/o,n=(n*h-t._y0*t._l12_2a+t._y2*t._l01_2a)/o}if(t._l23_a>sr){var l=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,c=3*t._l23_a*(t._l23_a+t._l12_a);r=(r*l+t._x1*t._l23_2a-i*t._l12_2a)/c,a=(a*l+t._y1*t._l23_2a-e*t._l12_2a)/c}t._context.bezierCurveTo(s,n,r,a,t._x2,t._y2)}function Rr(t,i){this._context=t,this._alpha=i}Rr.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){if(t=+t,i=+i,this._point){var e=this._x2-t,s=this._y2-i;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+s*s,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;break;case 2:this._point=3;default:zr(this,t,i)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};(function t(i){function e(t){return i?new Rr(t,i):new kr(t,0)}return e.alpha=function(i){return t(+i)},e})(.5);Fr.prototype={areaStart:xr,areaEnd:xr,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,i){if(t=+t,i=+i,this._point){var e=this._x2-t,s=this._y2-i;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+s*s,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=i;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=i);break;case 2:this._point=3,this._x5=t,this._y5=i;break;default:zr(this,t,i)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};(function t(i){function e(t){return i?new Fr(t,i):new Sr(t,0)}return e.alpha=function(i){return t(+i)},e})(.5);function Cr(t,i){this._context=t,this._alpha=i}Cr.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){if(t=+t,i=+i,this._point){var e=this._x2-t,s=this._y2-i;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+s*s,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:zr(this,t,i)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=i}};(function t(i){function e(t){return i?new Cr(t,i):new Pr(t,0)}return e.alpha=function(i){return t(+i)},e})(.5);function Tr(t){return t<0?-1:1}function jr(t,i,e){var s=t._x1-t._x0,n=i-t._x1,r=(t._y1-t._y0)/(s||n<0&&-0),a=(e-t._y1)/(n||s<0&&-0),h=(r*n+a*s)/(s+n);return(Tr(r)+Tr(a))*Math.min(Math.abs(r),Math.abs(a),.5*Math.abs(h))||0}function Er(t,i){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-i)/2:i}function Lr(t,i,e){var s=t._x0,n=t._y0,r=t._x1,a=t._y1,h=(r-s)/3;t._context.bezierCurveTo(s+h,n+h*i,r-h,a-h*e,r,a)}function Or(t){this._context=t}function Ir(t){this._context=t}Or.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Lr(this,this._t0,Er(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,i){var e=NaN;if(i=+i,(t=+t)!==this._x1||i!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,i):this._context.moveTo(t,i);break;case 1:this._point=2;break;case 2:this._point=3,Lr(this,Er(this,e=jr(this,t,i)),e);break;default:Lr(this,this._t0,e=jr(this,t,i))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=i,this._t0=e}}},(function(t){this._context=new Ir(t)}.prototype=Object.create(Or.prototype)).point=function(t,i){Or.prototype.point.call(this,i,t)},Ir.prototype={moveTo:function(t,i){this._context.moveTo(i,t)},closePath:function(){this._context.closePath()},lineTo:function(t,i){this._context.lineTo(i,t)},bezierCurveTo:function(t,i,e,s,n,r){this._context.bezierCurveTo(i,t,s,e,r,n)}};var Gr={};Gr={colors:["coral","skyblue","#66c2a5","tan","#8da0cb","#e78ac3","#a6d854","#ffd92f","coral","skyblue","tan","orange"]};var Dr={};Dr={addLegend:(t,i,e,s,n)=>{t.svg.append("svg").attr("x","left"===t.legendPosition?5:t.width-(e+2)).attr("y",0);const r=void 0===n?5-t.margin.left:n;let a=t.rc.rectangle("left"===t.legendPosition?r:t.width+t.margin.right-2-e,-t.margin.top/3,e,s,{fill:"white",fillWeight:.1,strokeWidth:.75,roughness:2}),h=t.roughSvg.appendChild(a);const o="rough"+t.el.substring(1,t.el.length);h.setAttribute("class",o),i.forEach((i,s)=>{const n=Rn("."+o).append("g").attr("transform",`translate(\n        ${"left"===t.legendPosition?5:t.width-(e+2)},\n        0)`);n.append("rect").style("fill",t.colors[s]).attr("width",20).attr("height",8).attr("x","left"===t.legendPosition?r:t.margin.right+5).attr("y",6+11*s-t.margin.top/3),n.append("text").style("font-size",".8rem").style("font-family",t.fontFamily).attr("x","left"===t.legendPosition?r+25:t.margin.right+30).attr("y",6+11*s+8-t.margin.top/3).text(i.text)})}};const Yr=t=>t>30?30:t;const Zr=t=>t>20?20:t,Br=t=>{const i=Object.keys(t).map(i=>h(t[i]));return[p(i,t=>t[0]),g(i,t=>t[1])]};const Wr=t=>t>30?30:t;const qr=t=>t>20?20:t,Nr=["pink","skyblue","coral","gold","teal","grey","darkgreen","pink","brown","slateblue","grey1","orange"];const Vr=t=>t>20?20:t;e={Bar:class{constructor(t){this.el=t.element,this.data=t.data,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:70,left:100},this.title=t.title,this.color=t.color||"skyblue",this.highlight=t.highlight||"coral",this.roughness=On(t.roughness)||1,this.stroke=t.stroke||"black",this.strokeWidth=t.strokeWidth||1,this.axisStrokeWidth=t.axisStrokeWidth||.5,this.axisRoughness=t.axisRoughness||.5,this.innerStrokeWidth=t.innerStrokeWidth||1,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.fillWeight=t.fillWeight||.5,this.simplification=t.simplification||.2,this.interactive=!1!==t.interactive,this.titleFontSize=t.titleFontSize,this.axisFontSize=t.axisFontSize,this.tooltipFontSize=t.tooltipFontSize||"0.95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.labels="object"===this.dataFormat?"labels":t.labels,this.values="object"===this.dataFormat?"values":t.values,this.xValueFormat=t.xValueFormat,this.yValueFormat=t.yValueFormat,this.padding=t.padding||.1,this.xLabel=t.xLabel||"",this.yLabel=t.yLabel||"",this.labelFontSize=t.labelFontSize||"1rem",this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)}initChartValues(t){let i=t.width?t.width:350,e=t.height?t.height:450;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}resolveData(t){return"string"!=typeof t?()=>{this.data=t,this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{this.data=t,this.drawFromFile()})}:void 0}addScales(){const t=this;this.xScale=dt().rangeRound([0,this.width]).padding(this.padding).domain("file"===this.dataFormat?this.data.map(i=>i[t.labels]):this.data[t.labels]),this.yScale=At().rangeRound([this.height,0]).domain("file"===this.dataFormat?[0,g(this.data,i=>+i[t.values])]:[0,g(this.data[t.values])])}addLabels(){""!==this.xLabel&&this.svg.append("text").attr("x",this.width/2).attr("y",this.height+this.margin.bottom/2).attr("dx","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.xLabel),""!==this.yLabel&&this.svg.append("text").attr("transform","rotate(-90)").attr("y",0-this.margin.left/1.4).attr("x",0-this.height/2).attr("dy","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.yLabel)}addAxes(){const t=F(this.xScale).tickSize(0).tickFormat(t=>this.xValueFormat?_(this.xValueFormat)(t):t),i=z(this.yScale).tickSize(0).tickFormat(t=>this.yValueFormat?_(this.yValueFormat)(t):t);this.svg.append("g").attr("transform","translate(0,"+this.height+")").call(t).attr("class",`xAxis${this.graphClass}`).selectAll("text").attr("transform","translate(-10,0)rotate(-45)").style("text-anchor","end").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.8,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize).style("opacity",.9),this.svg.append("g").call(i).attr("class",`yAxis${this.graphClass}`).selectAll("text").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize).style("opacity",.9),En("path.domain").attr("stroke","transparent")}makeAxesRough(t,i){let e=`xAxis${this.graphClass}`,s=`yAxis${this.graphClass}`,n=`rough-${e}`,r=`rough-${s}`;Rn(`.${e}`).selectAll("path.domain").each(function(e,s){let r=Rn(this).node().getAttribute("d"),a=i.path(r,{fillStyle:"hachure"});a.setAttribute("class",n),t.appendChild(a)}),En(`.${n}`).attr("transform",`translate(0, ${this.height})`),Rn(`.${s}`).selectAll("path.domain").each(function(e,s){let n=Rn(this).node().getAttribute("d"),a=i.path(n,{fillStyle:"hachure"});a.setAttribute("class",r),t.appendChild(a)})}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/2).attr("class","title").attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(40,Math.min(this.width,this.height)/5)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){En(this.interactionG).data("file"===this.dataFormat?this.data:this.data.values).append("rect").attr("x",(t,i)=>"file"===this.dataFormat?this.xScale(t[this.labels]):this.xScale(this.data[this.labels][i])).attr("y",(t,i)=>"file"===this.dataFormat?this.yScale(+t[this.values]):this.yScale(this.data[this.values][i])).attr("width",this.xScale.bandwidth()).attr("height",(t,i)=>"file"===this.dataFormat?this.height-this.yScale(+t[this.values]):this.height-this.yScale(this.data[this.values][i])).attr("fill","transparent");const t=Rn(this.el).append("div").style("opacity",0).attr("class","tooltip").style("position","absolute").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","3px").style("font-family",this.fontFamily).style("font-size",this.tooltipFontSize).style("pointer-events","none");let i=this;En(this.interactionG).on("mouseover",function(){t.style("opacity",1),Rn(this).select("path").style("stroke",i.highlight),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",i.strokeWidth+1.2)}),En(this.interactionG).on("mouseout",function(){t.style("opacity",0),Rn(this).select("path").style("stroke",i.color),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",i.strokeWidth)}),En(this.interactionG).on("mousemove",function(e){let s=Rn(this).attr("attrX"),n=Rn(this).attr("attrY"),r=jn(this);t.html(`<b>${s}</b>: ${n}`).style("opacity",.95).attr("class",function(t){}).style("transform",`translate(${r[0]+i.margin.left}px, \n          ${r[1]-(i.height+i.margin.top+i.margin.bottom)}px)`)})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.axisStrokeWidth,roughness:this.axisRoughness}}),this.rc=t.d.svg(this.roughSvg,{options:{fill:this.color,stroke:"none"===this.stroke?void 0:this.stroke,strokeWidth:this.innerStrokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle}})}drawFromObject(){this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.data.values.forEach((t,i)=>{let e=this.rc.rectangle(this.xScale(this.data[this.labels][i]),this.yScale(+t),this.xScale.bandwidth(),this.height-this.yScale(+t),{simplification:this.simplification,fillWeight:this.fillWeight}),s=this.roughSvg.appendChild(e);s.setAttribute("class",this.graphClass),s.setAttribute("attrX",this.data[this.labels][i]),s.setAttribute("attrY",+t)}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}drawFromFile(){this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.data.forEach(t=>{let i=this.rc.rectangle(this.xScale(t[this.labels]),this.yScale(+t[this.values]),this.xScale.bandwidth(),this.height-this.yScale(+t[this.values]),{simplification:this.simplification,fillWeight:this.fillWeight}),e=this.roughSvg.appendChild(i);e.setAttribute("class",this.graphClass),e.setAttribute("attrX",t[this.labels]),e.setAttribute("attrY",+t[this.values])}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}},BarH:class{constructor(t){this.el=t.element,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:50,left:100},this.title=t.title,this.color=t.color||"skyblue",this.highlight=t.highlight||"coral",this.roughness=In(t.roughness)||1,this.stroke=t.stroke||"black",this.strokeWidth=t.strokeWidth||1,this.axisStrokeWidth=t.axisStrokeWidth||.5,this.axisRoughness=t.axisRoughness||1,this.innerStrokeWidth=t.innerStrokeWidth||1,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.fillWeight=t.fillWeight||.5,this.simplification=t.simplification||.2,this.interactive=!1!==t.interactive,this.titleFontSize=t.titleFontSize,this.axisFontSize=t.axisFontSize,this.tooltipFontSize=t.tooltipFontSize||".95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.labels="object"===this.dataFormat?"labels":t.labels,this.values="object"===this.dataFormat?"values":t.values,this.xValueFormat=t.xValueFormat,this.yValueFormat=t.yValueFormat,this.padding=t.padding||.1,this.xLabel=t.xLabel||"",this.yLabel=t.yLabel||"",this.labelFontSize=t.labelFontSize||"1rem",this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)}initChartValues(t){let i=t.width?t.width:350,e=t.height?t.height:450;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}resolveData(t){return"string"!=typeof t?()=>{this.data=t,this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{console.log(t),this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{this.data=t,this.drawFromFile()})}:void 0}addScales(){const t=this;this.yScale=dt().rangeRound([0,this.height]).padding(this.padding).domain("file"===this.dataFormat?this.data.map(i=>i[t.labels]):this.data[t.labels]),this.xScale=At().rangeRound([0,this.width]).domain("file"===this.dataFormat?[0,g(this.data,i=>+i[t.values])]:[0,g(this.data[t.values])])}addLabels(){""!==this.xLabel&&this.svg.append("text").attr("x",this.width/2).attr("y",this.height+this.margin.bottom/2.4).attr("dx","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.xLabel),""!==this.yLabel&&this.svg.append("text").attr("transform","rotate(-90)").attr("y",0-this.margin.left/1.5).attr("x",0-this.height/2).attr("dy","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.yLabel)}addAxes(){const t=F(this.xScale).tickSize(0).tickFormat(t=>this.xValueFormat?_(this.xValueFormat)(t):t),i=z(this.yScale).tickSize(0).tickFormat(t=>this.yValueFormat?_(this.yValueFormat)(t):t);this.svg.append("g").attr("transform",`translate(0, ${this.height})`).call(t).attr("class",`xAxis${this.graphClass}`).selectAll("text").attr("transform","translate(-10,0)rotate(-45)").style("text-anchor","end").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize).style("opacity",.85),this.svg.append("g").call(i).attr("class",`yAxis${this.graphClass}`).selectAll("text").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize).style("opacity",.85),En("path.domain").attr("stroke","transparent")}makeAxesRough(t,i){let e=`xAxis${this.graphClass}`,s=`yAxis${this.graphClass}`,n=`rough-${e}`,r=`rough-${s}`;Rn(`.${e}`).selectAll("path.domain").each(function(e,s){let r=Rn(this).node().getAttribute("d"),a=i.path(r,{stroke:"black",fillStyle:"hachure"});a.setAttribute("class",n),t.appendChild(a)}),En(`.${n}`).attr("transform",`translate(0, ${this.height})`),Rn(`.${s}`).selectAll("path.domain").each(function(e,s){let n=Rn(this).node().getAttribute("d"),a=i.path(n,{stroke:"black",fillStyle:"hachure"});a.setAttribute("class",r),t.appendChild(a)})}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/2).attr("class","title").attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(40,Math.min(this.width,this.height)/5)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){En(this.interactionG).data("file"===this.dataFormat?this.data:this.data.values).append("rect").attr("x",0).attr("y",(t,i)=>"file"===this.dataFormat?this.yScale(t[this.labels]):this.yScale(this.data[this.labels][i])).attr("width",(t,i)=>"file"===this.dataFormat?this.xScale(+t[this.values]):this.xScale(this.data[this.values][i])).attr("height",this.yScale.bandwidth()).attr("fill","transparent");const t=Rn(this.el).append("div").style("opacity",0).attr("class","tooltip").style("position","absolute").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","3px").style("font-family",this.fontFamily).style("font-size",this.tooltipFontSize).style("pointer-events","none");let i=this;En(this.interactionG).on("mouseover",function(){t.style("opacity",1),Rn(this).select("path").style("stroke",i.highlight),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",i.strokeWidth+1.2)}),En(this.interactionG).on("mouseout",function(){t.style("opacity",0),Rn(this).select("path").style("stroke",i.color),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",i.strokeWidth)}),En(this.interactionG).on("mousemove",function(e){let s=Rn(this).attr("attrX"),n=Rn(this).attr("attrY"),r=jn(this);t.html(`<b>${s}</b>: ${n}`).style("opacity",.95).attr("class",function(t){}).style("transform",`translate(${r[0]+i.margin.left}px, \n              ${r[1]-(i.height+i.margin.top+i.margin.bottom)}px)`)})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.axisStrokeWidth,roughness:this.axisRoughness}}),this.rc=t.d.svg(this.roughSvg,{options:{fill:this.color,stroke:"none"===this.stroke?void 0:this.stroke,strokeWidth:this.innerStrokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle}})}drawFromObject(){this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.data.values.forEach((t,i)=>{let e=this.rc.rectangle(0,this.yScale(this.data[this.labels][i]),this.xScale(t),this.yScale.bandwidth(),{simplification:this.simplification,fillWeight:this.fillWeight}),s=this.roughSvg.appendChild(e);s.setAttribute("class",this.graphClass),s.setAttribute("attrX",this.data[this.labels][i]),s.setAttribute("attrY",+t)}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}drawFromFile(){this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.data.forEach(t=>{let i=this.rc.rectangle(0,this.yScale(t[this.labels]),this.xScale(+t[this.values]),this.yScale.bandwidth(),{simplification:this.simplification,fillWeight:this.fillWeight}),e=this.roughSvg.appendChild(i);e.setAttribute("class",this.graphClass),e.setAttribute("attrX",t[this.labels]),e.setAttribute("attrY",+t[this.values])}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}},Donut:class{constructor(t){this.el=t.element,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:10,left:20},this.title=t.title,this.colors=t.colors||Gr.colors,this.highlight=t.highlight,this.roughness=Yr(t.roughness)||1,this.strokeWidth=t.strokeWidth||.75,this.innerStrokeWidth=t.innerStrokeWidth||.75,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.fillWeight=t.fillWeight||.85,this.simplification=t.simplification||.2,this.interactive=!1!==t.interactive,this.titleFontSize=t.titleFontSize,this.tooltipFontSize=t.tooltipFontSize||".95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.labels="object"===this.dataFormat?"labels":t.labels,this.values="object"===this.dataFormat?"values":t.values,void 0!==this.labels&&void 0!==this.values?(this.legend=!1!==t.legend,this.legendPosition=t.legendPosition||"right",this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)):console.log(`Error for ${this.el}: Must include labels and values when        instantiating Donut chart. Skipping chart.`)}initChartValues(t){let i=t.width?t.width:300,e=t.height?t.height:300;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.radius=Math.min(this.width,this.height)/2,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}resolveData(t){return"string"!=typeof t?()=>{this.data=t,this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{this.data=t,this.drawFromFile()})}:t.includes(".json")?()=>{K(t).then(t=>{this.data=t,this.drawFromFile()})}:void 0}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/3).attr("class","title").attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(40,Math.min(this.width,this.height)/4)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){En(this.interactionG).append("g").attr("transform",`translate(${this.width/2}, ${this.height/2})`).data("object"===this.dataFormat?this.makePie(this.data[this.values]):this.makePie(this.data)).append("path").attr("d",this.makeArc).attr("stroke-width","0px").attr("fill","transparent");const t=Rn(this.el).append("div").style("opacity",0).attr("class","tooltip").style("position","absolute").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","3px").style("font-family",this.fontFamily).style("font-size",this.tooltipFontSize).style("pointer-events","none");let i,e=this;En(this.interactionG).on("mouseover",function(){t.style("opacity",1),i=Rn(this).selectAll("path").style("stroke"),void 0===e.highlight?Rn(this).selectAll("path").style("opacity",.5):Rn(this).selectAll("path").style("stroke",e.highlight)}),En(this.interactionG).on("mouseout",function(){t.style("opacity",0),Rn(this).selectAll("path").style("stroke",i),Rn(this).selectAll("path").style("opacity",1)}),En(this.interactionG).on("mousemove",function(i){let s=Rn(this).attr("attrX"),n=Rn(this).attr("attrY"),r=jn(this);t.html(`<b>${s}</b>: ${n}`).style("opacity",.95).attr("class",function(t){}).style("transform",`translate(${r[0]+e.margin.left}px, \n                            ${r[1]-e.height-e.margin.bottom}px)`)})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.strokeWidth>=3?3:this.strokeWidth}}),this.rc=t.d.svg(this.roughSvg,{options:{fill:this.color,strokeWidth:this.innerStrokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle,fillWeight:this.fillWeight}})}drawFromObject(){this.initRoughObjects(),this.makePie=mr(),this.makeArc=or().innerRadius(0).outerRadius(this.radius),this.arcs=this.makePie(this.data[this.values]),this.arcs.forEach((t,i)=>{let e=this.rc.arc(this.width/2,this.height/2,2*this.radius,2*this.radius,t.startAngle-Math.PI/2,t.endAngle-Math.PI/2,!0,{fill:this.colors[i],stroke:this.colors[i]});e.setAttribute("class",this.graphClass);let s=this.roughSvg.appendChild(e);s.setAttribute("attrY",this.data[this.values][i]),s.setAttribute("attrX",this.data[this.labels][i])});let t=this.rc.circle(this.width/2,this.height/2,this.radius,{fill:"white",strokeWidth:.05,fillWeight:10,fillStyle:"solid"});this.roughSvg.appendChild(t),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth);const i=this.data.labels.map((t,i)=>({color:this.colors[i],text:t})),e=6*i.reduce((t,i)=>t>i.text.length?t:i.text.length,0)+35,s=11*i.length+8;!0===this.legend&&Dr.addLegend(this,i,e,s),!0===this.interactive&&this.addInteraction()}drawFromFile(){this.initRoughObjects(),this.makePie=mr().value(t=>t[this.values]).sort(null);const t=[];this.makeArc=or().innerRadius(0).outerRadius(this.radius),this.arcs=this.makePie(this.data),this.arcs.forEach((i,e)=>{let s=this.rc.arc(this.width/2,this.height/2,2*this.radius,2*this.radius,i.startAngle-Math.PI/2,i.endAngle-Math.PI/2,!0,{fill:this.colors[e],stroke:this.colors[e]});s.setAttribute("class",this.graphClass);let n=this.roughSvg.appendChild(s);n.setAttribute("attrY",i.data[this.values]),n.setAttribute("attrX",i.data[this.labels]),t.push(i.data[this.labels])});let i=this.rc.circle(this.width/2,this.height/2,this.radius,{fill:"white",strokeWidth:.05,fillWeight:10,fillStyle:"solid"});this.roughSvg.appendChild(i),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth);const e=t.map((t,i)=>({color:this.colors[i],text:t})),s=6*e.reduce((t,i)=>t>i.text.length?t:i.text.length,0)+35,n=11*e.length+8;!0===this.legend&&Dr.addLegend(this,e,s,n),!0===this.interactive&&this.addInteraction()}},Line:class{constructor(t){this.el=t.element,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:50,left:100},this.title=t.title,this.roughness=Zr(t.roughness)||2.2,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.axisStrokeWidth=t.axisStrokeWidth||.4,this.axisRoughness=t.axisRoughness||.9,this.interactive=!1!==t.interactive,this.stroke=t.stroke||"black",this.fillWeight=t.fillWeight||.85,this.simplification=t.simplification||.2,this.colors=t.colors,this.strokeWidth=t.strokeWidth||8,this.titleFontSize=t.titleFontSize,this.axisFontSize=t.axisFontSize,this.tooltipFontSize=t.tooltipFontSize||"0.95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.x=t.x,this.y="object"===this.dataFormat?"y":t.y,this.xValueFormat=t.xValueFormat,this.yValueFormat=t.yValueFormat,this.legend=!1!==t.legend,this.legendPosition=t.legendPosition||"right",this.circle=!1!==t.circle,this.circleRadius=t.circleRadius||10,this.circleRoughness=Zr(t.circleRoughness)||2,this.xLabel=t.xLabel||"",this.yLabel=t.yLabel||"",this.labelFontSize=t.labelFontSize||"1rem","file"===this.dataFormat&&(this.dataSources=[],this.yKeys=Object.keys(t).filter(t=>/y/.test(t)),this.yKeys.map((i,e)=>{"yLabel"!==i&&this.dataSources.push(t[i])})),this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}initChartValues(t){let i=t.width?t.width:300,e=t.height?t.height:400;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveData(t){return"string"!=typeof t?()=>{this.data=t,this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{this.data=t,this.drawFromFile()})}:void 0}addScales(){let t,i;if("file"!==this.dataFormat)t=Br(this.data);else{const i=this.dataSources.map(t=>h(this.data,i=>+i[t]));t=[p(i,t=>t[0]),g(i,t=>t[1])]}if(void 0===this.x){const t=g(Object.keys(this.data).map(t=>this.data[t].length));i="file"===this.dataFormat?[0,this.data.length]:[0,t]}else i=h(this.x);const e=t,s=e[1]-e[0];this.xScale=void 0===this.x?gt().range([0,this.width]).domain([...Array(i[1]).keys()]):gt().range([0,this.width]).domain(this.x),this.yScale=At().range([this.height,0]).domain([0,e[1]+.05*s])}addLabels(){""!==this.xLabel&&this.svg.append("text").attr("x",this.width/2).attr("y",this.height+this.margin.bottom/1.3).attr("dx","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.xLabel),""!==this.yLabel&&this.svg.append("text").attr("transform","rotate(-90)").attr("y",0-this.margin.left/2).attr("x",0-this.height/2).attr("dy","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.yLabel)}addAxes(){const t=F(this.xScale).tickSize(0).tickFormat(t=>this.xValueFormat?_(this.xValueFormat)(t):t),i=z(this.yScale).tickSize(0).tickFormat(t=>this.yValueFormat?_(this.yValueFormat)(t):t);this.svg.append("g").attr("transform","translate(0,"+this.height+")").call(t).attr("class",`xAxis${this.graphClass}`).selectAll("text").attr("transform","translate(-10, 0)rotate(-45)").style("text-anchor","end").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize),this.svg.append("g").call(i).attr("class",`yAxis${this.graphClass}`).selectAll("text").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize),En("path.domain").attr("stroke","transparent"),En("g.tick").style("opacity",1)}makeAxesRough(t,i){let e=`xAxis${this.graphClass}`,s=`yAxis${this.graphClass}`,n=`rough-${e}`,r=`rough-${s}`;Rn(`.${e}`).selectAll("path.domain").each(function(e,s){let r=Rn(this).node().getAttribute("d"),a=i.path(r,{stroke:"black",fillStyle:"hachure"});a.setAttribute("class",n),t.appendChild(a)}),En(`.${n}`).attr("transform",`translate(0, ${this.height})`),Rn(`.${s}`).selectAll("path.domain").each(function(e,s){let n=Rn(this).node().getAttribute("d"),a=i.path(n,{stroke:"black",fillStyle:"hachure"});a.setAttribute("class",r),t.appendChild(a)})}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/2).attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(20,Math.min(this.width,this.height)/4)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){const t=this;this.chartScreen=this.svg.append("g").attr("pointer-events","all"),this.dataSources.map((t,i)=>{const e=this.data.map((i,e)=>void 0===this.x?[this.xScale(e),this.yScale(i[t])]:[this.xScale(this.x[e]),this.yScale(+i[t])]).filter(t=>void 0!==t[0]),s=dr().x(t=>t[0]).y(t=>t[1]);this.svg.append("path").datum(e).attr("fill","none").attr("stroke","blue").attr("stroke-width",1.5).attr("d",s).attr("visibility","hidden");const n=t+"class";this.svg.append("g").attr("class",n+"text").append("text").style("font-size",this.tooltipFontSize).style("opacity",0).style("font-family",this.fontFamily).attr("text-anchor","middle").attr("alignment-baseline","middle")}),this.chartScreen.append("rect").attr("width",this.width).attr("height",this.height).attr("fill","none").on("mousemove",function(i){const e=jn(this)[0],s=t.xScale.domain(),n=t.xScale.range(),r=o(n[0],n[1]+1,t.xScale.step()),h=a(r,e),l=s[h];t.dataSources.map((i,e)=>{const s="file"===t.dataFormat?void 0===t.x?t.data[l]:t.data[h]:t.data[i][h],n="."+i+"classtext";"file"===t.dataFormat?Rn(n).selectAll("text").style("opacity",1).html(void 0===t.x?`(${h},${s[i]})`:`(${t.x[h]}, ${s[i]})`).attr("x",void 0===t.x?t.xScale(h):t.xScale(t.x[h])).attr("y",t.yScale(s[i])-6):Rn(n).selectAll("text").style("opacity",1).html(void 0===t.x?`(${h}, ${s})`:`(${t.x[h]}, ${s})`).attr("x",void 0===t.x?t.xScale(h):t.xScale(t.x[h])).attr("y",t.yScale(s))})}).on("mouseout",()=>{t.dataSources.map(t=>{Rn("."+t+"classtext").selectAll("text").style("opacity",0)})})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.axisStrokeWidth,roughness:this.axisRoughness}}),this.rc=t.d.svg(this.roughSvg,{options:{stroke:"none"===this.stroke?void 0:this.stroke,strokeWidth:this.strokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle}})}drawFromObject(){void 0===this.colors&&(this.colors=Gr.colors),this.dataSources=Object.keys(this.data),this.initRoughObjects(),this.addScales(),this.dataSources.map((t,i)=>{const e=this.data[t].map((t,i)=>void 0===this.x?[this.xScale(i),this.yScale(+t)]:[this.xScale(this.x[i]),this.yScale(t)]),s=e.filter(t=>void 0!==t[0]);let n=this.rc.curve(s,{stroke:1===this.colors.length?this.colors[0]:this.colors[i],roughness:this.roughness,bowing:this.bowing});this.roughSvg.appendChild(n).setAttribute("class",this.graphClass),!0===this.circle&&e.forEach((t,e)=>{let s=this.rc.circle(t[0],t[1],this.circleRadius,{stroke:this.colors[i],fill:this.colors[i],fillStyle:"solid",strokeWidth:1,roughness:this.circleRoughness});this.roughSvg.appendChild(s)})});const t=this.dataSources.map((t,i)=>({color:this.colors[i],text:t})),i=6*t.reduce((t,i)=>t>i.text.length?t:i.text.length,0)+35,e=11*t.length+8;!0===this.legend&&Dr.addLegend(this,t,i,e,2),this.addAxes(),this.addLabels(),this.makeAxesRough(this.roughSvg,this.rcAxis),!0===this.interactive&&this.addInteraction()}drawFromFile(){void 0===this.colors&&(this.colors=Gr.colors),this.initRoughObjects(),this.addScales(),this.dataSources.map((t,i)=>{const e=this.data.map((i,e)=>void 0===this.x?[this.xScale(e),this.yScale(i[t])]:[this.xScale(this.x[e]),this.yScale(+i[t])]).filter(t=>void 0!==t[0]);let s=this.rc.curve(e,{stroke:this.colors[i],strokeWidth:this.strokeWidth,roughness:1,bowing:10});this.roughSvg.appendChild(s),!0===this.circle&&e.forEach((t,e)=>{let s=this.rc.circle(t[0],t[1],this.circleRadius,{stroke:this.colors[i],fill:this.colors[i],fillStyle:"solid",strokeWidth:1,roughness:this.circleRoughness});this.roughSvg.appendChild(s)})});const t=this.dataSources.map((t,i)=>({color:this.colors[i],text:t})),i=6*t.reduce((t,i)=>t>i.text.length?t:i.text.length,0)+35,e=11*t.length+8;!0===this.legend&&Dr.addLegend(this,t,i,e,2),this.addAxes(),this.addLabels(),this.makeAxesRough(this.roughSvg,this.rcAxis),!0===this.interactive&&this.addInteraction()}},Pie:class{constructor(t){this.el=t.element,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:10,left:20},this.title=t.title,this.colors=t.colors||Gr.colors,this.highlight=t.highlight,this.roughness=Wr(t.roughness)||0,this.strokeWidth=t.strokeWidth||.75,this.innerStrokeWidth=t.innerStrokeWidth||1,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.fillWeight=t.fillWeight||.5,this.simplification=t.simplification||.2,this.interactive=!1!==t.interactive,this.titleFontSize=t.titleFontSize,this.tooltipFontSize=t.tooltipFontSize||"0.95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.labels="object"===this.dataFormat?"labels":t.labels,this.values="object"===this.dataFormat?"values":t.values,void 0!==this.labels&&void 0!==this.values?(this.legend=!1!==t.legend,this.legendPosition=t.legendPosition||"right",this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)):console.log(`Error for ${this.el}: Must include labels and values when        instantiating Donut chart. Skipping chart.`)}initChartValues(t){let i=t.width?t.width:350,e=t.height?t.height:450;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.radius=Math.min(this.width,this.height)/2,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}resolveData(t){return"string"!=typeof t?()=>{this.data=t,this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{console.log(t),this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{console.log(t),this.data=t,this.drawFromFile()})}:t.includes(".json")?()=>{K(t).then(t=>{console.log(t),this.data=t,this.drawFromFile()})}:void 0}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/3).attr("class","title").attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(40,Math.min(this.width,this.height)/4)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){En(this.interactionG).append("g").attr("transform",`translate(${this.width/2}, ${this.height/2})`).data("object"===this.dataFormat?this.makePie(this.data[this.values]):this.makePie(this.data)).append("path").attr("d",this.makeArc).attr("stroke-width","0px").attr("fill","transparent");const t=Rn(this.el).append("div").style("opacity",0).attr("class","tooltip").style("position","absolute").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","3px").style("font-family",this.fontFamily).style("font-size",this.tooltipFontSize).style("pointer-events","none");let i,e=this;En(this.interactionG).on("mouseover",function(){t.style("opacity",1),i=Rn(this).selectAll("path").style("stroke"),void 0===e.highlight?Rn(this).selectAll("path").style("opacity",.5):Rn(this).selectAll("path").style("stroke",e.highlight)}),En(this.interactionG).on("mouseout",function(){t.style("opacity",0),Rn(this).selectAll("path").style("stroke",i),Rn(this).selectAll("path").style("opacity",1)}),En(this.interactionG).on("mousemove",function(i){let s=Rn(this).attr("attrX"),n=Rn(this).attr("attrY"),r=jn(this);t.html(`<b>${s}</b>: ${n}`).style("opacity",.95).attr("class",function(t){}).style("transform",`translate(${r[0]+e.margin.left}px, \n                            ${r[1]-e.height-e.margin.bottom}px)`)})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.strokeWidth>=3?3:this.strokeWidth}}),this.rc=t.d.svg(this.roughSvg,{options:{fill:this.color,strokeWidth:this.innerStrokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle}})}drawFromObject(){this.initRoughObjects(),this.makePie=mr(),this.makeArc=or().innerRadius(0).outerRadius(this.radius),this.arcs=this.makePie(this.data[this.values]),this.arcs.forEach((t,i)=>{let e=this.rc.arc(this.width/2,this.height/2,2*this.radius,2*this.radius,t.startAngle-Math.PI/2,t.endAngle-Math.PI/2,!0,{fill:this.colors[i],stroke:this.colors[i]});e.setAttribute("class",this.graphClass);let s=this.roughSvg.appendChild(e);s.setAttribute("attrY",this.data[this.values][i]),s.setAttribute("attrX",this.data[this.labels][i])}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth);const t=this.data.labels.map((t,i)=>({color:this.colors[i],text:t})),i=6*t.reduce((t,i)=>t>i.text.length?t:i.text.length,0)+35,e=11*t.length+8;!0===this.legend&&Dr.addLegend(this,t,i,e),!0===this.interactive&&this.addInteraction()}drawFromFile(){this.initRoughObjects(),this.makePie=mr().value(t=>t[this.values]).sort(null);const t=[];this.makeArc=or().innerRadius(0).outerRadius(this.radius),this.arcs=this.makePie(this.data),this.arcs.forEach((i,e)=>{let s=this.rc.arc(this.width/2,this.height/2,2*this.radius,2*this.radius,i.startAngle-Math.PI/2,i.endAngle-Math.PI/2,!0,{fill:this.colors[e],stroke:this.colors[e]});s.setAttribute("class",this.graphClass);let n=this.roughSvg.appendChild(s);n.setAttribute("attrY",i.data[this.values]),n.setAttribute("attrX",i.data[this.labels]),t.push(i.data[this.labels])}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth);const i=t.map((t,i)=>({color:this.colors[i],text:t})),e=6*i.reduce((t,i)=>t>i.text.length?t:i.text.length,0)+35,s=11*i.length+8;!0===this.legend&&Dr.addLegend(this,i,e,s),!0===this.interactive&&this.addInteraction()}},Scatter:class{constructor(t){this.el=t.element,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:50,left:100},this.title=t.title,this.colorVar=t.colorVar,this.roughness=qr(t.roughness)||1,this.highlight=t.highlight,this.highlightLabel=t.highlightLabel||"xy",this.radius=t.radius||8,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.axisStrokeWidth=t.axisStrokeWidth||.4,this.axisRoughness=t.axisRoughness||.9,this.interactive=!1!==t.interactive,this.curbZero=!0===t.curbZero,this.innerStrokeWidth=t.innerStrokeWidth||1,this.stroke=t.stroke||"black",this.fillWeight=t.fillWeight||.85,this.simplification=t.simplification||.2,this.colors=t.colors,this.strokeWidth=t.strokeWidth||1,this.titleFontSize=t.titleFontSize,this.axisFontSize=t.axisFontSize,this.tooltipFontSize=t.tooltipFontSize||"0.95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.x="object"===this.dataFormat?"x":t.x,this.y="object"===this.dataFormat?"y":t.y,this.xValueFormat=t.xValueFormat,this.yValueFormat=t.yValueFormat,this.xLabel=t.xLabel||"",this.yLabel=t.yLabel||"",this.labelFontSize=t.labelFontSize||"1rem",this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}initChartValues(t){let i=t.width?t.width:300,e=t.height?t.height:400;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveData(t){return"string"!=typeof t?()=>{this.data=t,this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{console.log(t),this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{this.data=t,this.drawFromFile()})}:void 0}addScales(){const t="file"===this.dataFormat?h(this.data,t=>+t[this.x]):h(this.data[this.x]),i=t[1]-t[0],e="file"===this.dataFormat?h(this.data,t=>+t[this.y]):h(this.data[this.y]),s=e[1]-e[0],n="file"===this.dataFormat?h(this.data,t=>t[this.colorVar]):[1,1];if("file"===this.dataFormat){const t=h(this.data,t=>+t[this.radius]),i=Math.min(this.width,this.height)/2/2;this.radiusScale=At().range([8,i]).domain(t)}!0===this.curbZero&&(e[0]>0&&(e[0]=0),t[0]>0&&(t[0]=0)),this.xScale=At().range([0,this.width]).domain([t[0]-.05*i,t[1]+.05*i]),this.yScale=At().range([this.height,0]).domain([e[0]-.05*s,e[1]+.05*s]),this.colorScale=yt().range(this.colors).domain(n)}addLabels(){""!==this.xLabel&&this.svg.append("text").attr("x",this.width/2).attr("y",this.height+this.margin.bottom/1.3).attr("dx","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.xLabel),""!==this.yLabel&&this.svg.append("text").attr("transform","rotate(-90)").attr("y",0-this.margin.left/2).attr("x",0-this.height/2).attr("dy","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.yLabel)}addAxes(){const t=F(this.xScale).tickSize(0).tickFormat(t=>this.xValueFormat?_(this.xValueFormat)(t):t),i=z(this.yScale).tickSize(0).tickFormat(t=>this.yValueFormat?_(this.yValueFormat)(t):t);this.svg.append("g").attr("transform","translate(0,"+this.height+")").call(t).attr("class",`xAxis${this.graphClass}`).selectAll("text").attr("transform","translate(-10, 0)rotate(-45)").style("text-anchor","end").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize),this.svg.append("g").call(i).attr("class",`yAxis${this.graphClass}`).selectAll("text").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize),En("path.domain").attr("stroke","transparent"),En("g.tick").style("opacity",1)}makeAxesRough(t,i){let e=`xAxis${this.graphClass}`,s=`yAxis${this.graphClass}`,n=`rough-${e}`,r=`rough-${s}`;Rn(`.${e}`).selectAll("path.domain").each(function(e,s){let r=Rn(this).node().getAttribute("d"),a=i.path(r,{stroke:"black",fillStyle:"hachure"});a.setAttribute("class",n),t.appendChild(a)}),En(`.${n}`).attr("transform",`translate(0, ${this.height})`),Rn(`.${s}`).selectAll("path.domain").each(function(e,s){let n=Rn(this).node().getAttribute("d"),a=i.path(n,{stroke:"black",fillStyle:"hachure"});a.setAttribute("class",r),t.appendChild(a)})}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/2).attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(20,Math.min(this.width,this.height)/4)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){const t=En(this.interactionG).data("file"===this.dataFormat?this.data:this.data.x).append("circle").attr("cx",(t,i)=>"file"===this.dataFormat?this.xScale(+t[this.x]):this.xScale(+this.data[this.x][i])).attr("cy",(t,i)=>"file"===this.dataFormat?this.yScale(+t[this.y]):this.yScale(+this.data[this.y][i]));"file"===this.dataFormat?t.attr("r",t=>"number"==typeof this.radius?.7*this.radius:.6*this.radiusScale(+t[this.radius])).attr("fill","transparent"):t.attr("r",(t,i)=>"number"==typeof this.radius?.7*this.radius:.6*this.radius[i]).attr("fill","transparent");var i=Rn(this.el).append("div").style("opacity",0).attr("class","tooltip").style("position","absolute").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","3px").style("font-family",this.fontFamily).style("font-size",this.tooltipFontSize).style("pointer-events","none");let e,s=this;En(this.interactionG).on("mouseover",function(){i.style("opacity",1),e=Rn(this).selectAll("path").style("stroke"),void 0===s.highlight?Rn(this).selectAll("path:nth-child(1)").style("opacity",.4):Rn(this).selectAll("path:nth-child(1)").style("stroke",s.highlight),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",s.strokeWidth+1.2)}),En(this.interactionG).on("mouseout",function(){i.style("opacity",0),Rn(this).selectAll("path").style("opacity",1),Rn(this).selectAll("path:nth-child(1)").style("stroke",e),Rn(this).selectAll("path:nth-child(2)").style("stroke",s.stroke),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",s.strokeWidth)}),En(this.interactionG).on("mousemove",function(t){let e=Rn(this).attr("attrX"),n=Rn(this).attr("attrY"),r=Rn(this).attr("attrHighlightLabel"),a=jn(this);i.html("xy"===s.highlightLabel?`<b>x</b>: ${e} <br><b>y</b>: ${n}`:`<b>${r}</b>`).attr("class",function(t){}).style("transform",`translate(${a[0]+s.margin.left}px, \n          ${a[1]-(s.height+s.margin.top+s.margin.bottom)}px)`)})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.axisStrokeWidth,roughness:this.axisRoughness}}),this.rc=t.d.svg(this.roughSvg,{options:{stroke:"none"===this.stroke?void 0:this.stroke,strokeWidth:this.innerStrokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle}})}drawFromObject(){void 0===this.colors&&(this.colors=Nr[0]),this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.data.x.forEach((t,i)=>{let e=this.rc.circle(this.xScale(+t),this.yScale(+this.data[this.y][i]),"number"==typeof this.radius?this.radius:this.radius[i],{fill:"string"==typeof this.colors?this.colors:1===this.colors.length?this.colors[0]:this.colors[i],simplification:this.simplification,fillWeight:this.fillWeight}),s=this.roughSvg.appendChild(e);s.setAttribute("class",this.graphClass),s.setAttribute("attrX",t),s.setAttribute("attrY",this.data[this.y][i]),s.setAttribute("attrHighlightLabel",this.data[this.highlightLabel])}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}drawFromFile(){void 0===this.colors&&(this.colors=Nr),this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.data.forEach((t,i)=>{let e=this.rc.circle(this.xScale(+t[this.x]),this.yScale(+t[this.y]),"number"==typeof this.radius?this.radius:this.radiusScale(+t[this.radius]),{fill:void 0===this.colorVar?this.colors[0]:this.colorScale(t[this.colorVar]),simplification:this.simplification,fillWeight:this.fillWeight}),s=this.roughSvg.appendChild(e);s.setAttribute("class",this.graphClass),s.setAttribute("attrX",t[this.x]),s.setAttribute("attrY",t[this.y]),s.setAttribute("attrHighlightLabel",t[this.highlightLabel])}),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}},StackedBar:class{constructor(t){this.el=t.element,this.data=t.data,this.element=t.element,this.margin=t.margin||{top:50,right:20,bottom:70,left:100},this.title=t.title,this.colors=t.colors||Gr.colors,this.highlight=t.highlight||"coral",this.roughness=Vr(t.roughness)||1,this.stroke=t.stroke||"black",this.strokeWidth=t.strokeWidth||1,this.axisStrokeWidth=t.axisStrokeWidth||.5,this.axisRoughness=t.axisRoughness||.5,this.innerStrokeWidth=t.innerStrokeWidth||1,this.fillStyle=t.fillStyle,this.bowing=t.bowing||0,this.fillWeight=t.fillWeight||.5,this.simplification=t.simplification||.2,this.interactive=!1!==t.interactive,this.titleFontSize=t.titleFontSize,this.axisFontSize=t.axisFontSize,this.tooltipFontSize=t.tooltipFontSize||"0.95rem",this.font=t.font||0,this.dataFormat="object"==typeof t.data?"object":"file",this.labels=t.labels,this.values=t.values,this.padding=t.padding||.1,this.xLabel=t.xLabel||"",this.yLabel=t.yLabel||"",this.labelFontSize=t.labelFontSize||"1rem",this.initChartValues(t),this.resolveFont(),this.drawChart=this.resolveData(t.data),this.drawChart(),"undefined"!==t.title&&this.setTitle(t.title)}initChartValues(t){let i=t.width?t.width:350,e=t.height?t.height:450;this.width=i-this.margin.left-this.margin.right,this.height=e-this.margin.top-this.margin.bottom,this.roughId=this.el+"_svg",this.graphClass=this.el.substring(1,this.el.length),this.interactionG="g."+this.graphClass,this.setSvg()}setSvg(){this.svg=Rn(this.el).append("svg").attr("width",this.width+this.margin.left+this.margin.right).attr("height",this.height+this.margin.top+this.margin.bottom).append("g").attr("id",this.roughId).attr("transform","translate("+this.margin.left+","+this.margin.top+")")}resolveFont(){0===this.font||void 0===this.font||"gaegu"===this.font.toString().toLowerCase()?(s.addFontGaegu(this.svg),this.fontFamily="gaeguregular"):1===this.font||"indie flower"===this.font.toString().toLowerCase()?(s.addFontIndieFlower(this.svg),this.fontFamily="indie_flowerregular"):this.fontFamily=this.font}getTotal(t){for(let i=0;i<t.length;i++){let e=0;for(let s=0;s<t.columns.length;++s)t.columns[s]!==this.labels&&(e+=t[i][t.columns[s]]=+t[i][t.columns[s]]);t[i].total=e}return t}resolveData(t){return"string"!=typeof t?()=>{this.data=t;for(let i=0;i<t.length;++i){let e=0;Object.keys(t[i]).forEach(s=>{s!==this.labels&&(e+=t[i][s],t[i].total=e)})}this.drawFromObject()}:t.includes(".csv")?()=>{H(t).then(t=>{this.getTotal(t),this.data=t,this.drawFromFile()})}:t.includes(".tsv")?()=>{X(t).then(t=>{this.getTotal(t),this.data=t,this.drawFromFile()})}:void 0}addScales(){this.xScale=dt().rangeRound([0,this.width]).padding(this.padding).domain(this.data.map(t=>t[this.labels])),this.data.sort(function(t,i){return i.total-t.total}),this.yScale=At().rangeRound([this.height,0]).domain([0,g(this.data,t=>t.total)]).nice();let t="object"===this.dataFormat?this.data.map(t=>t[this.labels]):this.data.columns;this.zScale=yt().range(["#98abc5","#8a89a6","#7b6888","#6b486b","#a05d56","#d0743c","#ff8c00"]).domain(t)}addLabels(){""!==this.xLabel&&this.svg.append("text").attr("x",this.width/2).attr("y",this.height+this.margin.bottom/2).attr("dx","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.xLabel),""!==this.yLabel&&this.svg.append("text").attr("transform","rotate(-90)").attr("y",0-this.margin.left/1.4).attr("x",0-this.height/2).attr("dy","1em").attr("class","labelText").style("text-anchor","middle").style("font-family",this.fontFamily).style("font-size",this.labelFontSize).text(this.yLabel)}addAxes(){const t=F(this.xScale).tickSize(0);this.svg.append("g").attr("transform","translate(0,"+this.height+")").call(t).attr("class",`xAxis${this.graphClass}`).selectAll("text").attr("transform","translate(-10,0)rotate(-45)").style("text-anchor","end").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.8,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize).style("opacity",.9);const i=z(this.yScale).tickSize(0);this.svg.append("g").call(i).attr("class",`yAxis${this.graphClass}`).selectAll("text").style("font-family",this.fontFamily).style("font-size",void 0===this.axisFontSize?`${Math.min(.95,Math.min(this.width,this.height)/140)}rem`:this.axisFontSize).style("opacity",.9),En("path.domain").attr("stroke","transparent")}makeAxesRough(t,i){let e=`xAxis${this.graphClass}`,s=`yAxis${this.graphClass}`,n=`rough-${e}`,r=`rough-${s}`;Rn(`.${e}`).selectAll("path.domain").each(function(e,s){let r=Rn(this).node().getAttribute("d"),a=i.path(r,{fillStyle:"hachure"});a.setAttribute("class",n),t.appendChild(a)}),En(`.${n}`).attr("transform",`translate(0, ${this.height})`),Rn(`.${s}`).selectAll("path.domain").each(function(e,s){let n=Rn(this).node().getAttribute("d"),a=i.path(n,{fillStyle:"hachure"});a.setAttribute("class",r),t.appendChild(a)})}setTitle(t){this.svg.append("text").attr("x",this.width/2).attr("y",0-this.margin.top/2).attr("class","title").attr("text-anchor","middle").style("font-size",void 0===this.titleFontSize?`${Math.min(40,Math.min(this.width,this.height)/5)}px`:this.titleFontSize).style("font-family",this.fontFamily).style("opacity",.8).text(t)}addInteraction(){En(this.interactionG).each(function(t,i){let e=this.attributes;Rn(this).append("rect").attr("x",e.x.value).attr("y",e.y.value).attr("width",e.width.value).attr("height",e.height.value).attr("fill","transparent")});const t=Rn(this.el).append("div").style("opacity",0).attr("class","tooltip").style("position","absolute").style("background-color","white").style("border","solid").style("border-width","1px").style("border-radius","5px").style("padding","3px").style("font-family",this.fontFamily).style("font-size",this.tooltipFontSize).style("pointer-events","none");let i,e=this;En(this.interactionG).on("mouseover",function(){t.style("opacity",1),i=Rn(this).selectAll("path").style("stroke"),Rn(this).select("path").style("stroke",e.highlight),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",e.strokeWidth+1.2)}),En(this.interactionG).on("mouseout",function(){t.style("opacity",0),Rn(this).select("path").style("stroke",i),Rn(this).selectAll("path:nth-child(2)").style("stroke-width",e.strokeWidth)}),En(this.interactionG).on("mousemove",function(i){let s=Rn(this).attr("attrX"),n=Rn(this).attr("attrY"),r=Rn(this).attr("keyY"),a=jn(this);t.html(`<h4>${s}</h4> <b>${r}</b>: ${n}`).style("opacity",.95).attr("class",function(t){}).style("transform",`translate(${a[0]+e.margin.left}px, \n          ${a[1]-(e.height+e.margin.top+e.margin.bottom)}px)`)})}initRoughObjects(){var t=i(Ln);this.roughSvg=document.getElementById(this.roughId),this.rcAxis=t.d.svg(this.roughSvg,{options:{strokeWidth:this.axisStrokeWidth,roughness:this.axisRoughness}}),this.rc=t.d.svg(this.roughSvg,{options:{stroke:"none"===this.stroke?void 0:this.stroke,strokeWidth:this.innerStrokeWidth,roughness:this.roughness,bowing:this.bowing,fillStyle:this.fillStyle}})}stacking(){this.data.forEach(t=>{let i=Object.keys(t),e=0;i.forEach((i,s)=>{if(s>0&&"total"!==i){e+=parseInt(t[i]);let n=this.xScale(t[this.labels]),r=this.yScale(e),a=this.xScale.bandwidth(),h=this.height-this.yScale(+t[i]),o=this.rc.rectangle(n,r,a,h,{fill:this.colors[s],stroke:this.colors[s],simplification:this.simplification,fillWeight:this.fillWeight}),l=this.roughSvg.appendChild(o);l.setAttribute("class",this.graphClass),l.setAttribute("attrX",t[this.labels]),l.setAttribute("keyY",i),l.setAttribute("attrY",+t[i]),l.setAttribute("x",n),l.setAttribute("y",r),l.setAttribute("width",a),l.setAttribute("height",h)}})})}drawFromObject(){this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.stacking(),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}drawFromFile(){this.initRoughObjects(),this.addScales(),this.addAxes(),this.makeAxesRough(this.roughSvg,this.rcAxis),this.addLabels(),this.stacking(),En(this.interactionG).selectAll("path:nth-child(2)").style("stroke-width",this.strokeWidth),!0===this.interactive&&this.addInteraction()}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=e:"function"==typeof t&&t.amd&&t(function(){return e})}();
},{}],"rLLx":[function(require,module,exports) {
"use strict";var t=e(require("rough-viz"));function e(t){return t&&t.__esModule?t:{default:t}}function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function u(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}function i(t,e){return!e||"object"!==n(e)&&"function"!=typeof e?c(t):e}function c(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function f(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&y(t,e)}function l(t){var e="function"==typeof Map?new Map:void 0;return(l=function(t){if(null===t||!p(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,n)}function n(){return s(t,arguments,b(this).constructor)}return n.prototype=Object.create(t.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),y(n,t)})(t)}function a(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function s(t,e,n){return(s=a()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var o=new(Function.bind.apply(t,r));return n&&y(o,n.prototype),o}).apply(null,arguments)}function p(t){return-1!==Function.toString.call(t).indexOf("[native code]")}function y(t,e){return(y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var h=function(e){function n(){return r(this,n),i(this,b(n).call(this))}return f(n,l(HTMLElement)),u(n,[{key:"render",value:function(){this.innerHTML='<div id="vis1"></div>',new t.default.Donut({element:"#vis1",data:{labels:["North","South","East","West"],values:[10,5,8,3]},title:"Regions",width:window.innerWidth/4,roughness:8,colors:["red","orange","blue","skyblue"],stroke:"black",strokeWidth:3,fillStyle:"cross-hatch",fillWeight:3.5})}},{key:"connectedCallback",value:function(){this.render()}}]),n}();window.customElements.define("rough-viz-chart",h);
},{"rough-viz":"DqYQ"}]},{},["rLLx"], null)
//# sourceMappingURL=/roughVizExample.js.map